[
    {
        "ID": 1,
        "Title_processed": "icml 2023 topological deep learning challenge design result",
        "Authors_processed": "mathildepapillon mustafahajij helenjenne johanmathe audunmyers theodorepapamarkou tolgabirdal tamaldey timdoster teganemerson gurusankargopalakrishnan devendragovil aldoguzmán-sáenz henrykvinge neallivesay sohammukherjee shreyasn.samaga karthikeyannatesanramamurthy maneelreddykarri paulrosen sophiasanborn robinwalters jensagerberg sadrodinbarikbin claudiobattiloro etal.(31additionalauthorsnotshown)",
        "Abstract_processed": "abstract  machine learning  competition asked participant provide opensource implementation topological neural network literature contributing python package toponetx  data processing  topomodelx  deep learning   challenge attracted twentyeight qualifying submission twomonth duration  paper describes desi  paper present computational challenge topological deep learning hosted within icml 2023 workshop topology geometry machine learning  competition asked participant provide opensource implementation topological neural network literature contributing python package toponetx  data processing  topomodelx  deep learning   challenge attracted twentyeight qualifying submission twomonth duration  paper describes design challenge summarizes main finding   le",
        "Date_processed": "18january2024"
    },
    {
        "ID": 2,
        "Title_processed": "determining optimal lot size reorder point quality feature food item cold warehouse datadriven optimization approach",
        "Authors_processed": "atenakarimi omidghorbani rezatashakkori seyedhamidrezapasandideh miladjasemi",
        "Abstract_processed": "abstract  model seek minimize annual total cost managing warehouse  model nonlinear mixed programming one  solved pyomo leading library python language programming  numerical example used demonstrate use model  sensitivity analysis  develop insight operation cold warehouse   propose nonlinear optimization model determining optimum lot size reorder point food item distributed cold warehouse well optimum quality feature  namely temperature  humidity  packaging type  level environmental condition  item quality estimated based feature mentioned earlier  used constraint optimization process  assumption made inventory managed continuous review policy warehouse limited space  model seek minimize annual total cost managing warehouse  model nonlinear mixed programming one  solved pyomo leading library python language programming  numerical example used demonstrate use model  sensitivity analysis  develop insight operation cold warehouse  sensitive analysis open door managerial insight manager policymakers highly benefit   le",
        "Date_processed": "18january2024"
    },
    {
        "ID": 3,
        "Title_processed": "projectionbased predictioncorrection method distributed consensus optimization",
        "Authors_processed": "hanlong",
        "Abstract_processed": "abstract  upon applying method distributed linear least square problem  manifested performance superiority  registering enhancement exceeding 55  compared python builtin function  overall  research provides robust distributed optimization technique significant theoretical practical benefit   industrial technology domain  mathematical optimization crucial application seen area like transportation engineering  robotics  machine learning  growth data volume  increased demand solution largescale challenge  leading rise distributed optimization  approach involves decentralized device working collectively achieve system objective  focus study distributed consensus optimization concerning convex set constraint network  paper introduces selfadaptive projectionbased predictioncorrection method  ppcm   inspired proximal method integrated variational inequality  ppcm stand contractive method characterized impressive convergence property  decentralized nature also fit networked setting aptly  also parameter selection simple clear  without hassle parameter tuning  thorough theoretical evaluation confirms ppcm effectiveness  upon applying method distributed linear least square problem  manifested performance superiority  registering enhancement exceeding 55  compared python builtin function  overall  research provides robust distributed optimization technique significant theoretical practical benefit   le",
        "Date_processed": "18january2024"
    },
    {
        "ID": 4,
        "Title_processed": "quick primer machine learning wireless communication",
        "Authors_processed": "farisb.mismar",
        "Abstract_processed": "abstract  first draft quick primer use python  relevant library  build wireless communication prototype support multipleinput multipleoutput  mimo  system orthogonal frequency division multiplexing  ofdm  addition machine learning use case  primer intended empower researcher mean  first draft quick primer use python  relevant library  build wireless communication prototype support multipleinput multipleoutput  mimo  system orthogonal frequency division multiplexing  ofdm  addition machine learning use case  primer intended empower researcher mean efficiently create simulation  draft aligned syllabus graduate course created taught fall 2022 aspire update draft occasionally based feedback larger research community   le",
        "Date_processed": "17january2024"
    },
    {
        "ID": 5,
        "Title_processed": "eipy opensource python package multimodal data integration using heterogeneous ensemble",
        "Authors_processed": "jamiej.r.bennett yanchakli gauravpandey",
        "Abstract_processed": "abstract  paper  introduce eipy  opensource python package developing effective  multimodal heterogeneous ensemble classification  eipy simultaneously provides rigorous  userfriendly framework comparing selecting bestperforming multimodal data integration predictive modeling method systematically evaluating th  paper  introduce eipy  opensource python package developing effective  multimodal heterogeneous ensemble classification  eipy simultaneously provides rigorous  userfriendly framework comparing selecting bestperforming multimodal data integration predictive modeling method systematically evaluating performance using nested crossvalidation  package designed leverage scikitlearnlike estimator component build multimodal predictive model  uptodate user guide  including api reference tutorial  eipy maintained http  eipyreadthedocsio  main repository project found github http  githubcomgauravpandeylabeipy   le",
        "Date_processed": "17january2024"
    },
    {
        "ID": 6,
        "Title_processed": "sarriguren polynomialtime complete algorithm random ksat relatively dense clause",
        "Authors_processed": "alfredogoñisarriguren",
        "Abstract_processed": "abstract  dense clause harder 3sat  moreover  python implementation algorithm  input datasets obtained result experiment made available   sarriguren  new complete algorithm sat based counting clause  valid also uniquesat  sat  described  analyzed tested  although existing complete algorithm sat perform slower clause many literal  advantage sarriguren  literal clause bigger probability overlapping among clause  property make clause counting process efficient  actually  provides   m2 time nk   time complexity random  k  sat instance  n  variable   relatively dense clause  density level relative number variable  n    clause relatively dense  kgeq7sqrt  n    although theoretically could worstcases exponential complexity  probability case happen random  k  sat relatively dense clause practically zero  algorithm empirically tested polynomial time complexity maintains also  k  sat instance le dense clause   kgeq5sqrt  n     density could  example  0049 working  n20000  variable  k989  literal  addition  presented two complementary algorithm provide solution  k  sat instance valuable information number solution literal  although algorithm solve npp problem  polynomial algorithm 3sat   broad knowledge subject   k  sat  k  3  dense clause harder 3sat  moreover  python implementation algorithm  input datasets obtained result experiment made available   le",
        "Date_processed": "17january2024"
    },
    {
        "ID": 7,
        "Title_processed": "cotran llmbased code translator using reinforcement learning feedback compiler symbolic execution",
        "Authors_processed": "prithwishjana piyushjha haoyangju gauthamkishore aryanmahajan vijayganesh",
        "Abstract_processed": "abstract  comparing cotran 14 code translation tool include humanwritten transpilers  llmbased translation tool  chatgpt benchmark 57000 javapython equivalent pair  show cotran outperforms relevant metric compilation accuracy  compacc  functional equivalence accuracy  feqacc   example    paper  present llmbased code translation method associated tool called cotran  translates wholeprograms one highlevel programming language another  current llmbased code translation method lack training approach ensure translated code reliably compiles bear substantial functional equivalence input code  work  train llm via reinforcement learning  modifying finetuning process incorporate compiler feedback symbolic execution  symexec  based equivalence testing feedback check functional equivalence input output program  idea guide llmintraining  via compiler symexecbased testing feedback  letting know far producing perfect translation  report extensive experiment comparing cotran 14 code translation tool include humanwritten transpilers  llmbased translation tool  chatgpt benchmark 57000 javapython equivalent pair  show cotran outperforms relevant metric compilation accuracy  compacc  functional equivalence accuracy  feqacc   example  tool achieves 4868  feqacc  7698  compacc pythontojava translation  whereas nearest competing tool  plbartbase  get 3826  7577  resp  also  built upon codet5  cotran achieves 1123   1489  improvement feqacc 407   814  compacc javatopython pythontojava translation resp   le",
        "Date_processed": "16january2024"
    },
    {
        "ID": 8,
        "Title_processed": "scalable hierarchical bayesn inference investigating dependence sn ia host galaxy dust property stellar mass redshift",
        "Authors_processed": "matthewgrayling stephenthorp kaiseys.mandel suhaildhawan anasofiauzsoy benjaminm.boyd erine.hayesn samm.ward",
        "Abstract_processed": "abstract    addition  discus brief new  gpuaccelerated python implementation bayesn suitable application large survey publicly available used future cosmological analysis  code found  http  githubcombayesnbayesn   apply hierarchical probabilistic sed model bayesn analyse sample 475 sne ia  0015  z  04  foundation  des3yr ps1md investigate property dust host galaxy  jointly infer dust law  rv  population distribution sed level high lowmass galaxy simultaneously dustindependent  intrinsic difference  find intrinsic mass step  0049pm0016  mag  significance 31     allowing constant intrinsic  achromatic magnitude offset  additionally apply model allowing time wavelengthdependent intrinsic difference sne ia different mass bin  finding  sim  2    difference magnitude colour around peak 45    difference later time  intrinsic difference inferred simultaneously difference population mean  rv   sim  2    significance  demonstrating intrinsic extrinsic difference may play role causing host galaxy mass step  also consider model allows mean  rv  distribution linearly evolve redshift find evidence evolution  infer gradient relation  r  038pm070   addition  discus brief new  gpuaccelerated python implementation bayesn suitable application large survey publicly available used future cosmological analysis  code found  http  githubcombayesnbayesn   le",
        "Date_processed": "16january2024"
    },
    {
        "ID": 9,
        "Title_processed": "subseasonalclimateusa dataset subseasonal forecasting benchmarking",
        "Authors_processed": "soukaynamouatadid pauloorenstein genevieveflaspohler mirunaoprescu judahcohen franklynwang seanknight mariageogdzhayeva samlevang ernestfraenkel lestermackey",
        "Abstract_processed": "abstract  way extend accuracy current operational model  subseasonalclimateusa regularly updated accessible via http  githubcommicrosoftsubseasonaldata python package   subseasonal forecasting weather two six week advance critical resource allocation advance disaster notice pose many challenge forecasting community  forecast horizon  physicsbased dynamical model limited skill  target prediction depend complex manner local weather variable global climate variable  recently  machine learning method shown promise advancing state art cost complex data curation  integrating expert knowledge aggregation across multiple relevant data source  file format  temporal spatial resolution  streamline process accelerate future development  introduce subseasonalclimateusa  curated dataset training benchmarking subseasonal forecasting model united state  use dataset benchmark diverse suite model  including operational dynamical model  classical meteorological baseline  ten stateoftheart machine learning deep learningbased method literature  overall  benchmark suggest simple effective way extend accuracy current operational model  subseasonalclimateusa regularly updated accessible via http  githubcommicrosoftsubseasonaldata python package   le",
        "Date_processed": "16january2024"
    },
    {
        "ID": 10,
        "Title_processed": "diverge implement various exact renormalization group example",
        "Authors_processed": "jonasb.hauck dantem.kennes lennartklebl",
        "Abstract_processed": "abstract  present diverge  open source  highperformance ccpython library functional renormalization group  frg  calculation lattice fermion  versatile model interface tailored real material application seamlessly integrates existing  standard tool abinitio community  code fully support multisite  multiorbital    present diverge  open source  highperformance ccpython library functional renormalization group  frg  calculation lattice fermion  versatile model interface tailored real material application seamlessly integrates existing  standard tool abinitio community  code fully support multisite  multiorbital  nonsu  2  model three included frg variant  tu  2  frg  npatch frg  grid frg   diverge library pave way widespread application frg tool study competing order quantum material   le",
        "Date_processed": "16january2024"
    },
    {
        "ID": 11,
        "Title_processed": "streamlinedirected tunable deterministic lateral displacement dld chip novel approach efficient particle separation",
        "Authors_processed": "alikheirkhahbarzoki amirshamloo",
        "Abstract_processed": "abstract  particle  changing angle streamlines pillar array  dc tuned  prior determining dc case  initial estimation made using python script utilized streamline coordinate  subsequently  fem modeling particle trajectory  precise dc value ascertained juxtaposed est  conventional deterministic lateral displacement  dld   migration behavior particle specific size determined critical diameter  dc   predefined device geometry  contrast typical approach alters angle pillar array fluid streamlines modifying geometrical parameter  study introduces novel perspective focus changing direction streamlines  proposed technique enables fabrication tunable dld chip easy manufacture design  chip feature one completely horizontal pillar array two bypass channel top bottom dld chamber  width bypass channel change linearly inlet outlet  two design configuration suggested chip  characterized either parallel unparallel slope bypass channel  chip capable generating wide range dc value manipulating two distinct control parameter  first control parameter involves adjusting flow rate two bypass channel  second control parameter entail controlling slope bypass channel  parameter influence direction particlecarrying streamlines resulting change pathline particle  changing angle streamlines pillar array  dc tuned  prior determining dc case  initial estimation made using python script utilized streamline coordinate  subsequently  fem modeling particle trajectory  precise dc value ascertained juxtaposed estimated value  revealing minimal disparity  innovative chip enables attainment dc value spanning 05 14   le",
        "Date_processed": "16january2024"
    },
    {
        "ID": 12,
        "Title_processed": "deep learning based image compression microscopy image empirical study",
        "Authors_processed": "yuzhou jansollmann jianxuchen",
        "Abstract_processed": "abstract  wanted way  multiple classical lossy image compression technique compared several aibased compression model provided trained compressai toolbox using python  different compression technique compared compression ratio  multiple image similarity measure  importantly  prediction accuracy labelfree mode  fast development modern microscope bioimaging technique  unprecedentedly large amount imaging data generated  stored  analyzed  even shared network  size data pose great challenge current data infrastructure  one common way reduce data size image compression  present study analyzes classic deep learning based image compression method  impact deep learning based image processing model  deep learning based labelfree prediction model  ie  predicting fluorescent image bright field image  used example application comparison analysis  effective image compression method could help reduce data size significantly without losing necessary information  therefore reduce burden data management infrastructure permit fast transmission network data sharing cloud computing  compress image wanted way  multiple classical lossy image compression technique compared several aibased compression model provided trained compressai toolbox using python  different compression technique compared compression ratio  multiple image similarity measure  importantly  prediction accuracy labelfree model compressed image  found aibased compression technique largely outperform classic one minimally affect downstream labelfree task 2d case  end  hope present study could shed light potential deep learning based image compression impact image compression downstream deep learning based image analysis model   le",
        "Date_processed": "16january2024"
    },
    {
        "ID": 13,
        "Title_processed": "lost translation study bug introduced large language model translating code",
        "Authors_processed": "rangeetpan alirezaibrahimzada rahulkrishna divyasankar lambertpouguemwassi michelemerler borissobolev rajupavuluri saurabhsinha reyhanehjabbarvand",
        "Abstract_processed": "abstract  largescale empirical study investigate ability general llm code llm code translation across pair different language  including c  c  go  java  python  study  involves translation 1700 code sample three benchmark two realworld project  reveals llm yet reliably used automate co  code translation aim convert source code one programming language  pl  another  given promising ability large language model  llm  code synthesis  researcher exploring potential automate code translation  prerequisite advancing state llmbased code translation understand promise limitation existing technique  end  present largescale empirical study investigate ability general llm code llm code translation across pair different language  including c  c  go  java  python  study  involves translation 1700 code sample three benchmark two realworld project  reveals llm yet reliably used automate code translation  correct translation ranging 21  473  studied llm  manual investigation unsuccessful translation identifies 15 category translation bug  also compare llmbased code translation traditional nonllmbased approach  analysis show two class technique strength weakness  finally  insight study suggest providing context llm translation help produce better result  end  propose promptcrafting approach based symptom erroneous translation  improves performance llmbased code translation 55  average  study first kind  term scale breadth  provides insight current limitation llm code translation opportunity improving  dataset  consisting 1700 code sample five pls 10k test  43k translated code  1748 manually labeled bug  1365 bugfix pair  help drive research area   le",
        "Date_processed": "16january2024"
    },
    {
        "ID": 14,
        "Title_processed": "soqcs stochastic optical quantum circuit simulator",
        "Authors_processed": "javierosca jirivala",
        "Abstract_processed": "abstract  present stochastic optical quantum circuit simulator  soqcs  cpython library simulation quantum optical circuit  provide implementation detail  soqcs offer framework define  simulate study quantum linear optical circuit presence various imperfection  come partial distinguishability photon  lo  present stochastic optical quantum circuit simulator  soqcs  cpython library simulation quantum optical circuit  provide implementation detail  soqcs offer framework define  simulate study quantum linear optical circuit presence various imperfection  come partial distinguishability photon  lossy propagation medium  unbalanced beamsplitters nonideal emitter detector example  soqcs developed series different module provide quantum circuit  different simulator core tool analyze output  quantum circuit defined basic component  including emitter  linear optical element  delay detector  postselection configured straightforwardly part detector definition  important attribute soqcs modularity allows development future   le",
        "Date_processed": "16january2024"
    },
    {
        "ID": 15,
        "Title_processed": "mario math reasoning code interpreter output reproducible pipeline",
        "Authors_processed": "minpengliao weiluo chengxili jingwu kaifan",
        "Abstract_processed": "abstract  theoretical standpoint  paper  address challenge enriching data landscape introducing novel math dataset  enhanced capability utilize python code interpreter  dataset derived gsm8k math refined combination gpt4 annotation  human review  selftraining process    large language model  llm  seen considerable advancement natural language understanding task  yet remains gap bridge attaining true artificial general intelligence  especially concerning shortcoming mathematical reasoning capability  postulate inherent nature llm training  focus predicting probability next token  present challenge effectively modeling mathematical reasoning demand exact calculation  datadriven theoretical standpoint  paper  address challenge enriching data landscape introducing novel math dataset  enhanced capability utilize python code interpreter  dataset derived gsm8k math refined combination gpt4 annotation  human review  selftraining process  error original gsm8k training set fixed  additionally  propose tentative  easily replicable protocol finetuning mathspecific llm  led significant improvement performance 7bparameter llm gsm8k math datasets  committed advancing field mathematical reasoning llm  end  made model checkpoint make dataset publicly available  hope facilitate research development within community   le",
        "Date_processed": "16january2024"
    },
    {
        "ID": 16,
        "Title_processed": "codecomplex timecomplexity dataset bilingual source code",
        "Authors_processed": "seung-yeopbaik mingijeon joonghyukhahn junginkim yo-subhan sang-kiko",
        "Abstract_processed": "abstract  source code dataset code manually annotated corresponding worstcase time complexity  codecomplex comprises 4900 java code equivalent number python code  sourced programming competition annotated complexity label panel algorithmic expert  best knowledge  codecomplex stand mo  analyzing worstcase time complexity code crucial task computer science software engineering ensuring efficiency  reliability  robustness software system  however  wellknown problem determining worstcase time complexity given code written generalpurpose programming language theoretically undecidable famous halting problem proven alan turing  thus  move towards realistic scenario input output program exist  allows u discern correctness given code  challenging analyze time complexity exhaustively  response challenge  introduce codecomplex  novel source code dataset code manually annotated corresponding worstcase time complexity  codecomplex comprises 4900 java code equivalent number python code  sourced programming competition annotated complexity label panel algorithmic expert  best knowledge  codecomplex stand extensive code dataset tailored predicting complexity  subsequently  present outcome experiment employing various baseline model  leveraging stateoftheart neural model code comprehension like codebert  graphcodebert  unixcoder  plbart  codet5  codet5  chatgpt  analyze dataset impact model learning predicting time complexity   le",
        "Date_processed": "16january2024"
    },
    {
        "ID": 17,
        "Title_processed": "maunakea spectroscopic explorer exposure time calculator endtoend simulator optimizing spectrograph design observing simulation",
        "Authors_processed": "tae-geunji jennifersobeck changgonkim hojaeahn mingyeongyang taeeunkim sungwooke.hong keiszeto jenniferl.marshall christiansurace soojongpak",
        "Abstract_processed": "abstract  target ab magnitude  water vapor  airmass  sky brightness ab magnitude  additional user input provided depending computational mode   etc built using python 37 feature graphical user interface allows crossplatform use  development process etc software follows agile methodology utilizes unified  maunakea spectroscopic explorer  mse  project provide multiobject spectroscopy optical nearinfrared band using 1125m aperture telescope  repurposing original canadafrancehawaii telescope  cfht  site  mse observe 4332 object per single exposure field view 15 square degree  utilizing two spectrograph lowmoderate  r  sim  3000  6000  high  r  approx  30000  spectral resolution  general  exposure time calculator  etc  used estimate performance observing system calculating signaltonoise ratio  sn  exposure time  present design mse exposure time calculator  etc   four calculation mode  sn  exposure time  sn trend wavelength  sn trend magnitude  incorporates mse system requirement specified conceptual design  mse etc currently allows userdefined input target ab magnitude  water vapor  airmass  sky brightness ab magnitude  additional user input provided depending computational mode   etc built using python 37 feature graphical user interface allows crossplatform use  development process etc software follows agile methodology utilizes unified modeling language  uml  diagram visualize software architecture  also describe testing verification mse etc   le",
        "Date_processed": "16january2024"
    },
    {
        "ID": 18,
        "Title_processed": "mcmchaos improvising rap music mcmc method chaos theory",
        "Authors_processed": "robertg.kimelman",
        "Abstract_processed": "abstract  gibbs sampler lorenz attractor simulation  far know  simulation method never used rap music generation  software implement python texttospeech processing  pyttxs  convert text wrangled mcflow corpus english speech  version  value simulated respective mathematical model alter  novel freestyle rap software  mcmchaos 001  based rap music transcription created previous research presented  software three different version  making use different mathematical simulation method  collapsed gibbs sampler lorenz attractor simulation  far know  simulation method never used rap music generation  software implement python texttospeech processing  pyttxs  convert text wrangled mcflow corpus english speech  version  value simulated respective mathematical model alter rate speech  volume   multiple voice case  voice texttospeech engine linebyline basis  user software presented realtime graphical user interface  gui  instantaneously change initial value read mathematical simulation method  future research might attempt allow user control autonomy   le",
        "Date_processed": "15january2024"
    },
    {
        "ID": 19,
        "Title_processed": "fuzz4all universal fuzzing large language model",
        "Authors_processed": "chunqiustevenxia matteopaltenghi jialetian michaelpradel lingmingzhang",
        "Abstract_processed": "abstract  iteratively update prompt create new fuzzing input  evaluate fuzz4all nine system test take six different language  c  c  go  smt2  java python  input  evaluation show  across six language  universal fuzzing achieves higher coverage existing  languagespecific fuzzers  furthermore  fuzz4all ide  fuzzing achieved tremendous success discovering bug vulnerability various software system  system test  suts  take programming formal language input  eg  compiler  runtime engine  constraint solver  software library accessible apis  especially important fundamental building block software development  however  existing fuzzers system often target specific language  thus easily applied language even version language  moreover  input generated existing fuzzers often limited specific feature input language  thus hardly reveal bug related new feature  paper present fuzz4all  first fuzzer universal sense target many different input language many different feature language  key idea behind fuzz4all leverage large language model  llm  input generation mutation engine  enables approach produce diverse realistic input practically relevant language  realize potential  present novel autoprompting technique  creates llm prompt wellsuited fuzzing  novel llmpowered fuzzing loop  iteratively update prompt create new fuzzing input  evaluate fuzz4all nine system test take six different language  c  c  go  smt2  java python  input  evaluation show  across six language  universal fuzzing achieves higher coverage existing  languagespecific fuzzers  furthermore  fuzz4all identified 98 bug widely used system  gcc  clang  z3  cvc5  openjdk  qiskit quantum computing platform  64 bug already confirmed developer previously unknown   le",
        "Date_processed": "15january2024"
    },
    {
        "ID": 20,
        "Title_processed": "jumpcoder go beyond autoregressive coder via online modification",
        "Authors_processed": "mouxiangchen haotian zhongxinliu xiaoxueren jianlingsun",
        "Abstract_processed": "abstract  multiple benchmark consistently indicate significant improvement baseline  notably  jumpcoder assist code llm achieving 36  increase pas  1 python  63  java  37  c multilingual humaneval benchmark  code public http  githubcomkeytoyzejumpcoder   existing code large language model  code llm  exhibit impressive capability code generation  autoregressive sequential generation inherently lack reversibility  limitation hinders timely correcting previous missing statement coding human  often leading error propagation suboptimal performance  introduce jumpcoder  novel modelagnostic framework enables online modification nonsequential generation augment code llm  key idea behind jumpcoder insert new code currently generated code necessary generation  achieved auxiliary infilling model work tandem code llm  since identifying best infill position beforehand intractable  adopt infillfirst  judgelater strategy  experiment filling  k  critical position following generation line  us abstract syntax tree  ast  parser alongside generation model scoring effectively judge validity potential infill  extensive experiment using six stateoftheart code llm across multiple benchmark consistently indicate significant improvement baseline  notably  jumpcoder assist code llm achieving 36  increase pas  1 python  63  java  37  c multilingual humaneval benchmark  code public http  githubcomkeytoyzejumpcoder   le",
        "Date_processed": "15january2024"
    },
    {
        "ID": 21,
        "Title_processed": "paradox function header comment",
        "Authors_processed": "arthuroxenhorn almogmor uristern drorg.feitelson",
        "Abstract_processed": "abstract  real information  define simple metric informationless documentation based similarity function signature  applying 21140 file github python project show function undocumented  header comment written typically contain additional information beyond function signature   perhaps widely used form code documentation function header comment  performed largescale survey 367 developer catalog expectation documentation chronicle actual practice  paradoxically  found developer appreciate value header comment estimate worth investment time  nevertheless tend write documentation code  reason writing header comment vary belief code selfdocumenting concern documentation kept uptodate  possible outcome situation developer may evade requirement write documentation using template generate worthless comment provide real information  define simple metric informationless documentation based similarity function signature  applying 21140 file github python project show function undocumented  header comment written typically contain additional information beyond function signature   le",
        "Date_processed": "15january2024"
    },
    {
        "ID": 22,
        "Title_processed": "towards automatic translation machine learning visual insight analytical assertion",
        "Authors_processed": "arumoyshome luiscruz arievandeursen",
        "Abstract_processed": "abstract  present vision developing automated tool capable translating visual property observed machine learning  ml  visualisation python assertion  tool aim streamline process manually verifying visualisation ml development cycle  critical realworld data assumption often change postdeployme  present vision developing automated tool capable translating visual property observed machine learning  ml  visualisation python assertion  tool aim streamline process manually verifying visualisation ml development cycle  critical realworld data assumption often change postdeployment  prior study  mined  54070  jupyter notebook github created catalogue  269  semantically related visualisationassertion  va  pair  building catalogue  propose build taxonomy organises va pair based ml verification task  input feature space comprises rich source information mined jupyter notebook  visualisation  python source code  associated markdown text  effectiveness various ai model  including traditional nlp4code model modern large language model  compared using established machine translation metric evaluated qualitative study human participant  paper also plan address challenge extending existing va pair dataset additional pair kaggle compare tool effectiveness commercial generative ai model like chatgpt  research contributes field ml system validation also explores novel way leverage ai automating enhancing software engineering practice ml   le",
        "Date_processed": "15january2024"
    },
    {
        "ID": 23,
        "Title_processed": "pgx hardwareaccelerated parallel game simulator reinforcement learning",
        "Authors_processed": "sotetsukoyamada shinriokano soichironishimori yumurata keigohabara harukakita shinishii",
        "Abstract_processed": "abstract  accelerator  experiment dgxa100 workstation  discovered pgx simulate rl environment 10100x faster existing implementation available python  pgx includes rl environment commonly used benchmark rl research  backgammon  chess  shogi  go  additionally  pgx offer miniature game set baseline mode  propose pgx  suite board game reinforcement learning  rl  environment written jax optimized gputpu accelerator  leveraging jax autovectorization parallelization accelerator  pgx efficiently scale thousand simultaneous simulation accelerator  experiment dgxa100 workstation  discovered pgx simulate rl environment 10100x faster existing implementation available python  pgx includes rl environment commonly used benchmark rl research  backgammon  chess  shogi  go  additionally  pgx offer miniature game set baseline model facilitate rapid research cycle  demonstrate efficient training gumbel alphazero algorithm pgx environment  overall  pgx provides highperformance environment simulator researcher accelerate rl experiment  pgx available http  githubcomsotetsukpgx   le",
        "Date_processed": "15january2024"
    },
    {
        "ID": 24,
        "Title_processed": "smooth binary mechanism efficient private continual observation",
        "Authors_processed": "joeldanielandersson rasmuspagh",
        "Abstract_processed": "abstract  time per value  2  variance reduced factor 4 compared binary mechanism  3  noise distribution step identical  empirically  simple python implementation approach outperforms running time approach henzinger et al  well attempt improve algorithm using highperformance algorith  privacy continual observation study release differentially private estimate based dataset evolves time  problem releasing private prefix sum  x1  x2  x3  dot  01    value  xi  private  particularly wellstudied  generalized form used stateoftheart method private stochastic gradient descent  sgd   seminal binary mechanism privately release first   prefix sum noise variance polylogarithmic    recently  henzinger et al  denisov et al  showed possible improve binary mechanism two way  variance noise reduced  large  constant factor  also made even across time step  however  algorithm generating noise distribution efficient one would like term computation time  particular  space  address efficiency problem presenting simple alternative binary mechanism 1  generating noise take constant average time per value  2  variance reduced factor 4 compared binary mechanism  3  noise distribution step identical  empirically  simple python implementation approach outperforms running time approach henzinger et al  well attempt improve algorithm using highperformance algorithm multiplication toeplitz matrix   le",
        "Date_processed": "15january2024"
    },
    {
        "ID": 25,
        "Title_processed": "graph database computationally efficient filter quickly esg integrated equity investment management",
        "Authors_processed": "parthasen sumanasen",
        "Abstract_processed": "abstract  database compare contrast efficiency performance  perform experiment data collected multiple source including stock price financial news  python used interface connect query database  create database structure according feed file structure  load data table  object  read data   designmethodologyapproach research evaluated database sql  nosql graph database compare contrast efficiency performance  perform experiment data collected multiple source including stock price financial news  python used interface connect query database  create database structure according feed file structure  load data table  object  read data  connect postgresql  elasticsearch  neo4j  purpose modern application llm  large language model  including rag  retrieval augmented generation  machine learning  deep learning  nlp  natural language processing  decision analytics computationally expensive  finding better option consume le resource time get result  finding graph database esg  environmental  social governance  comparatively better considered extended analytics integrate esg business investment  practical implication graph ml rag architecture model introduced new framework le computationally expensive llm application equity filtering process portfolio management  originalityvalue filtering selective stock two thousand listed company stock exchange active investment  consuming le resource consumption especially memory energy integrate artificial intelligence esg business investment   le",
        "Date_processed": "15january2024"
    },
    {
        "ID": 26,
        "Title_processed": "lirotai novel platform crowdsourcing retinal image segmentation",
        "Authors_processed": "jonathanfhima janvaneijgen motifreiman ingeborgstalmans joachima.behar",
        "Abstract_processed": "abstract  image segmentation  method  lirot  ai composed three component  ipados client application named lirot  aiapp  backend server named lirot  aiserver python api name lirot  aiapi  lirot  aiapp developed swift 56 lirot  aiserver firebase backend  lirot  aiapi allows management database  lirot  aiapp  introduction  supervised deep learning  dl  task  researcher need large annotated dataset  medical data science  one major limitation develop dl model lack annotated example large quantity  often due time expertise required annotate  introduce lirot  ai  novel platform facilitating crowdsourcing image segmentation  method  lirot  ai composed three component  ipados client application named lirot  aiapp  backend server named lirot  aiserver python api name lirot  aiapi  lirot  aiapp developed swift 56 lirot  aiserver firebase backend  lirot  aiapi allows management database  lirot  aiapp installed many ipados device needed annotator may able perform segmentation simultaneously remotely  incorporate apple pencil compatibility  making segmentation faster  accurate  intuitive expert computerbased alternative  result  demonstrate usage lirot  ai creation retinal fundus dataset reference vasculature segmentation  discussion future work  use active learning strategy continue enlarging retinal fundus dataset including efficient process select image annotated distribute annotator   le",
        "Date_processed": "14january2024"
    },
    {
        "ID": 27,
        "Title_processed": "codeagent enhancing code generation toolintegrated agent system realworld repolevel coding challenge",
        "Authors_processed": "kechizhang jiali geli xianjieshi zhijin",
        "Abstract_processed": "abstract    realworld repolevel code generation  introduce codeagentbench  manually curated benchmark repolevel code generation  benchmark comprises five highquality python project  encompassing total 101 sample  ass nine leading llm repolevel task observe decline performance  tackle  present codeagent   large language model  llm  shown promise automated code generation typically excel simpler task generating standalone code unit  realworld software development  however  often involves complex code repository  named repo  complex dependency extensive documentation  fill gap  research pivot towards evaluating llm realistic setting  realworld repolevel code generation  introduce codeagentbench  manually curated benchmark repolevel code generation  benchmark comprises five highquality python project  encompassing total 101 sample  ass nine leading llm repolevel task observe decline performance  tackle  present codeagent  novel llmbased agent framework employ external tool effective repolevel code generation  codeagent integrates five programming tool  enabling interaction software artifact information retrieval  code symbol navigation  code testing  implement four agent strategy optimize tool  usage  experiment codeagentbench show codeagent enhances llm performance significantly  improvement ranging 181  250   test humaneval benchmark confirm codeagent adaptability efficacy across various code generation task  notably  codeagent outperforms commercial product like github copilot  showcasing superior accuracy efficiency  result demonstrate codeagent robust capability code generation  highlighting potential realworld repolevel coding challenge   le",
        "Date_processed": "14january2024"
    },
    {
        "ID": 28,
        "Title_processed": "scorematching neural network improved multiband source separation",
        "Authors_processed": "mattl.sampson petermelchior charlotteward sufiabirmingham",
        "Abstract_processed": "abstract  maintaining excellent performance color  also demonstrate significant improvement robustness inaccurate initialization  scarlet2 written python  extendend jax equinox  fully gpu compatible  implementation data package score model publicly available http  githubcompmelchiorscarlet2   present implementation scorematching neural network represents datadriven prior nonparametric galaxy morphology  gradient prior included optimization routine recently developed multiband modeling framework scarlet2  redesign scarlet method currently employed deblender pipeline hypersuprimecam survey rubin observatory  addition prior avoids requirement nondifferentiable constraint  lead convergence failure discovered scarlet  present architecture training detail scorematching neural network show simulated rubinlike observation scarlet2 outperforms scarlet accuracy total flux morphology estimate  maintaining excellent performance color  also demonstrate significant improvement robustness inaccurate initialization  scarlet2 written python  extendend jax equinox  fully gpu compatible  implementation data package score model publicly available http  githubcompmelchiorscarlet2   le",
        "Date_processed": "14january2024"
    },
    {
        "ID": 29,
        "Title_processed": "towards responsible ai banking addressing bias fair decisionmaking",
        "Authors_processed": "alessandrocastelnovo",
        "Abstract_processed": "abstract  tool responsible implementation aibased decisionmaking system  line opensource principle  released bias demand fairview accessible python package  promoting progress field ai fairness   era characterized pervasive integration artificial intelligence decisionmaking process across diverse industry  demand trust never pronounced  thesis embarks comprehensive exploration bias fairness  particular emphasis ramification within banking sector  aidriven decision bear substantial societal consequence  context  seamless integration fairness  explainability  human oversight utmost importance  culminating establishment commonly referred  responsible ai   emphasizes critical nature addressing bias within development corporate culture aligns seamlessly ai regulation universal human right standard  particularly realm automated decisionmaking system  nowadays  embedding ethical principle development  training  deployment ai model crucial compliance forthcoming european regulation promoting societal good  thesis structured around three fundamental pillar  understanding bias  mitigating bias  accounting bias  contribution validated practical application realworld scenario  collaboration intesa sanpaolo  collaborative effort contributes understanding fairness also provides practical tool responsible implementation aibased decisionmaking system  line opensource principle  released bias demand fairview accessible python package  promoting progress field ai fairness   le",
        "Date_processed": "13january2024"
    },
    {
        "ID": 30,
        "Title_processed": "adaptoring adapter generation provide alternative api library",
        "Authors_processed": "larsreimann günterkniesel-wünsche",
        "Abstract_processed": "abstract  api transformation  finally  consider issue migrating generated adapter original library introduces breaking change  implemented approach python  demonstrating effectiveness quickly provide alternative api even large library   thirdparty library cornerstone fast application development  enable efficient use  library must provide welldesigned api  obscure api instead slows learning process lead erroneous use  usual approach improve api library edit code directly  either keeping old api deprecating  temporarily increasing api size  dropping  introducing breaking change   maintainer unwilling make change  others need create hard fork  refactor  difficult incorporate change original library  bug fix performance improvement  paper  instead explore use adapter pattern provide new api new library call original library internally  allows new library leverage implementation change original library  additional cost  call approach adaptoring  make approach practical  identify api transformation adapter code generated automatically  investigate transformation inferred automatically  based documentation usage pattern original library  case automated inference possible  present tool let developer manually specify api transformation  finally  consider issue migrating generated adapter original library introduces breaking change  implemented approach python  demonstrating effectiveness quickly provide alternative api even large library   le",
        "Date_processed": "13january2024"
    },
    {
        "ID": 31,
        "Title_processed": "dynamic survival analysis modelling hazard function via ordinary differential equation",
        "Authors_processed": "j.a.christen f.j.rubio",
        "Abstract_processed": "abstract  hazard function represents one main quantity interest analysis survival data  propose general approach parametrically modelling dynamic hazard function using system autonomous ordinary differential equation  ode   modelling approach used provide qualitative quantitative analysis evolution hazard function tim  hazard function represents one main quantity interest analysis survival data  propose general approach parametrically modelling dynamic hazard function using system autonomous ordinary differential equation  ode   modelling approach used provide qualitative quantitative analysis evolution hazard function time  proposal capitalises extensive literature ode  particular  allow establishing basic rule law dynamic hazard function via use autonomous ode  show implement proposed modelling framework case analytic solution system ode ode solver required obtain numerical solution  focus use bayesian modelling approach  proposed methodology also coupled maximum likelihood estimation  simulation study presented illustrate performance model interplay sample size censoring  two case study using real data presented illustrate use proposed approach highlight interpretability corresponding model  conclude discussion potential extension work strategy include covariates framework   le",
        "Date_processed": "12january2024"
    },
    {
        "ID": 32,
        "Title_processed": "geometric surprise python lunch conjecture",
        "Authors_processed": "gurbirarora matthewheadrick albionlawrence martinsasieta connorwolfe",
        "Abstract_processed": "abstract  slice holographic spacetime  nonminimal extremal surface occurs two locally minimal surface homologous given boundary region  according python lunch conjecture brown et al  bulge area control complexity bulk reconstruction  sense amount postselection need overcome  bulge surface  time reflectionsymmetric cauchy slice holographic spacetime  nonminimal extremal surface occurs two locally minimal surface homologous given boundary region  according python lunch conjecture brown et al  bulge area control complexity bulk reconstruction  sense amount postselection need overcome reconstruction entanglement wedge beyond outermost extremal surface  study geometry bulge variety classical spacetimes  discover number surprising feature distinguish familiar extremal surface ryutakayanagi surface  spontaneously break spatial isometry  continuous discrete  sensitive choice boundary infrared regulator  selfintersect  probe entanglement shadow orbifold singularity  probe compact space ad  ptimes sq   feature imply  according python lunch conjecture  novel qualitative difference complexity entanglement holographic context  also find  surprisingly  extended black brane interior nonextensive complexity  similarly  multiboundary wormhole state  complexity pleateaus certain number boundary included   le",
        "Date_processed": "12january2024"
    },
    {
        "ID": 33,
        "Title_processed": "oop objectoriented programming evaluation benchmark large language model",
        "Authors_processed": "shuaiwang liangding lishen yongluo bodu dachengtao",
        "Abstract_processed": "abstract  programming  oop  favor functional programming  fp   eg  humaneval mbpp  address  study introduces pioneering oopfocused benchmark  featuring 431 python program encompass essential oop concept feature like class encapsulation method  propose novel evaluation metric  pas   tailored oop  enhancing tradit  advancing automated programming necessitates robust comprehensive code generation benchmark  yet current evaluation framework largely neglect objectoriented programming  oop  favor functional programming  fp   eg  humaneval mbpp  address  study introduces pioneering oopfocused benchmark  featuring 431 python program encompass essential oop concept feature like class encapsulation method  propose novel evaluation metric  pas   tailored oop  enhancing traditional pas  k measure  evaluation 23 leading large language model  llm   including general codespecialized model  reveals three key insight  1  pas  offer relevant comprehensive assessment oop code generation  2  despite excelling fp  codespecialized llm like wizardcoder lag oop compared model like chatgpt  3  poor performance advanced llm oop benchmark highlight critical need improvement field  benchmark script publicly released  http  githubcomalphadloopeval   le",
        "Date_processed": "12january2024"
    },
    {
        "ID": 34,
        "Title_processed": "pyty repairing static type error python",
        "Authors_processed": "yiuwaichow lucadigrazia michaelpradel",
        "Abstract_processed": "abstract  effort  hampering adoption gradual typing practice  paper present pyty  automated program repair approach targeted statically detectable type error python  problem repairing type error deserves specific attention expose particular repair pattern  offer warning message hint apply  gradual typing enables developer annotate type choosing  offering flexible middle ground type annotation fully statically typed language  code base get typeannotated  static type checker detect increasingly large number type error  unfortunately  fixing error requires manual effort  hampering adoption gradual typing practice  paper present pyty  automated program repair approach targeted statically detectable type error python  problem repairing type error deserves specific attention expose particular repair pattern  offer warning message hint apply fix  gradual type checking serf automatic way validate fix  address problem three contribution    empirical study investigates developer fix python type error  showing diverse set fixing strategy recurring pattern   ii  approach automatically extract type error fix  enables u create dataset 2766 errorfix pair 176 github repository  named pytydefects   iii  first learningbased repair technique fixing type error python  motivated relative data scarcity problem  neural model core pyty trained via crosslingual transfer learning  evaluation show pyty offer fix ten frequent category type error  successfully addressing 854  281 realworld error  effectiveness outperforms stateoftheart large language model asked repair type error  21x  complement previous technique aimed type error manifest runtime  finally  20 30 pull request pytysuggested fix merged developer  showing usefulness pyty practice   le",
        "Date_processed": "12january2024"
    },
    {
        "ID": 35,
        "Title_processed": "mlbased modeling predict io performance different storage subsystem",
        "Authors_processed": "yihengxu pranavsivaraman hariharandevarajan kathrynmohror abhinavbhatele",
        "Abstract_processed": "abstract  subsystem complicated  result  adapting parallel application use burst buffer efficiently trialanderror process  work  present pythonbased tool called prismio enables programmatic analysis io trace  using prismio  identify bottleneck burst buffer parallel file system explain certain  parallel application spend significant amount time performing io largescale supercomputer  fast nearcompute storage accelerator called burst buffer reduce time processor spends performing io mitigate io bottleneck  however  determining given application could accelerated using burst buffer straightforward even storage expert  relationship application io characteristic  io volume  process involved  etc   best storage subsystem complicated  result  adapting parallel application use burst buffer efficiently trialanderror process  work  present pythonbased tool called prismio enables programmatic analysis io trace  using prismio  identify bottleneck burst buffer parallel file system explain certain io pattern perform poorly   use machine learning model relationship io characteristic burst buffer selection  run ior  io benchmark  various io characteristic different storage system collect performance data  use data input training model  model predict file application placed bb unseen ior scenario accuracy 9447  four real application accuracy 9586    le",
        "Date_processed": "11january2024"
    },
    {
        "ID": 36,
        "Title_processed": "jupyter widget extension education research computational physic chemistry",
        "Authors_processed": "doudu taylorj.baird sarabonella giovannipizzi",
        "Abstract_processed": "abstract  python jupyter becoming increasingly popular tool computational physic chemistry research education  interactive notebook precious tool creating graphical user interface teaching material  jupyter widget constitute core interactive functionality  package library offer broad range widg  python jupyter becoming increasingly popular tool computational physic chemistry research education  interactive notebook precious tool creating graphical user interface teaching material  jupyter widget constitute core interactive functionality  package library offer broad range widget general purpose exist  lack specialized widget computational physic  chemistry material science implies significant time investment development effective jupyter notebook research education domain   present custom jupyter widget developed target need research teaching community  widget constitute high quality interactive graphical component employed  example  tool visualize manipulate data  explore different visual representation concept  illuminating relationship existing  addition  discus jupyterlab extension developed modify jupyterlab interface enhanced user experience working various application within targeted scientific domain   le",
        "Date_processed": "11january2024"
    },
    {
        "ID": 37,
        "Title_processed": "attempt generate new bridge type latent space pixelcnn",
        "Authors_processed": "hongjunzhang",
        "Abstract_processed": "abstract  artificial intelligence technology  using symmetric structured image dataset threespan beam bridge  arch bridge  cablestayed bridge suspension bridge  based python programming language  tensorflow kera deep learning platform framework  pixelcnn constructed trained  model capture statistical structure image ca  try generate new bridge type using generative artificial intelligence technology  using symmetric structured image dataset threespan beam bridge  arch bridge  cablestayed bridge suspension bridge  based python programming language  tensorflow kera deep learning platform framework  pixelcnn constructed trained  model capture statistical structure image calculate probability distribution next pixel previous pixel given  obtained latent space sampling  new bridge type different training dataset generated  pixelcnn organically combine different structural component basis human original bridge type  creating new bridge type certain degree human original ability  autoregressive model understand meaning sequence  multimodal model combine regression autoregressive model understand sequence  multimodal model way achieve artificial general intelligence future   le",
        "Date_processed": "11january2024"
    },
    {
        "ID": 38,
        "Title_processed": "mutationbased consistency testing evaluating code understanding capability llm",
        "Authors_processed": "ziyuli donghwanshin",
        "Abstract_processed": "abstract  conduct case study two popular llm  gpt35 gpt4  using stateoftheart code generation benchmark  humanevalx  consists six programming language  python  c  java  go  javascript  rust   compare performance llm across different type code mutation programming language analyze result  fin  large language model  llm  shown remarkable capability processing natural programming language  enabled various application software engineering  requirement engineering  code generation  software testing  however  existing code generation benchmark necessarily ass code understanding performance llm  especially subtle inconsistency may arise code semantics described natural language  paper  propose novel method systematically ass code understanding performance llm  particularly focusing subtle difference code description  introducing code mutation existing code generation datasets  code mutation small change alter semantics original code  creating mismatch natural language description  apply different type code mutation  operator replacement statement deletion  generate inconsistent codedescription pair  use pair test ability llm correctly detect inconsistency  propose new llm testing method  called mutationbased consistency testing  mct   conduct case study two popular llm  gpt35 gpt4  using stateoftheart code generation benchmark  humanevalx  consists six programming language  python  c  java  go  javascript  rust   compare performance llm across different type code mutation programming language analyze result  find llm show significant variation code understanding performance different strength weakness depending mutation type language   le",
        "Date_processed": "11january2024"
    },
    {
        "ID": 39,
        "Title_processed": "debugbench evaluating debugging capability large language model",
        "Authors_processed": "runchutian yiningye yujiaqin xincong yankailin yinxupan yesaiwu zhiyuanliu maosongsun",
        "Abstract_processed": "abstract  deficiency  introduce  debugbench   llm debugging benchmark consisting 4253 instance  cover four major bug category 18 minor type c  java  python  construct debugbench  collect code snippet leetcode community  implant bug source data gpt4  assure rigorous quality check  evaluate two com  large language model  llm  demonstrated exceptional coding capability  however  another critical component programming proficiency  debugging capability llm remains relatively unexplored  previous evaluation llm  debugging ability significantly limited risk data leakage  scale dataset  variety tested bug  overcome deficiency  introduce  debugbench   llm debugging benchmark consisting 4253 instance  cover four major bug category 18 minor type c  java  python  construct debugbench  collect code snippet leetcode community  implant bug source data gpt4  assure rigorous quality check  evaluate two commercial three opensource model zeroshot scenario  find  1  closedsource model like gpt4 exhibit inferior debugging performance compared human  opensource model code llama fail attain pas rate score   2  complexity debugging notably fluctuates depending bug category   3  incorporating runtime feedback clear impact debugging performance always helpful  extension  also compare llm debugging code generation  revealing strong correlation closedsource model  finding benefit development llm debugging   le",
        "Date_processed": "11january2024"
    },
    {
        "ID": 40,
        "Title_processed": "rado matroids graphical calculus boundary wilson loop diagram",
        "Authors_processed": "susamaagarwala colleendelaney karenyeats",
        "Abstract_processed": "abstract  move generalized wilson loop diagram result new diagram represent boundary associated positroid  without passing cryptomorphisms  provide python implementation graphical calculus use show boundary positroids associated ordinary wilson loop diagram generated diagrammatic move  study boundary positroid cell arise n  4 super yang mill theory  main tool new diagrammatic object generalizes wilson loop diagram used represent interaction theory  prove condition new generalized wilson loop diagram correspond positroids give explicit algorithm calculate grassmann necklace said positroids  develop graphical calculus operating directly noncrossing generalized wilson loop diagram  paradigm  applying diagrammatic move generalized wilson loop diagram result new diagram represent boundary associated positroid  without passing cryptomorphisms  provide python implementation graphical calculus use show boundary positroids associated ordinary wilson loop diagram generated diagrammatic move certain case   le",
        "Date_processed": "10january2024"
    },
    {
        "ID": 41,
        "Title_processed": "numerical method modeling nucleation growth particle prevents numerical diffusion",
        "Authors_processed": "a.khrabry i.d.kaganovich s.raman e.turkoz d.graves",
        "Abstract_processed": "abstract  model experimental study nonmonotonic temperature variation leading particle evaporation  computational code implementing numerical method python available upon request   stateoftheart model aerosol particle nucleation growth cooling vapor primarily use nodal method numerically solve particle growth kinetics  method  particle smaller critical size omitted consideration  thermodynamically unfavorable  omission based assumption newly formed particle critical size subcriticalsize particle important take account  due nature nodal method  suffers numerical diffusion  cause artificial broadening cluster size distribution leading significant overestimation number largesize particle  address issue  propose accurate numerical method explicitly model particle size  us special numerical scheme eliminates numerical diffusion  extensively compare novel method commonly used nodal solver general dynamic equation  gde  particle growth demonstrate offer gde solution higher accuracy without generating numerical diffusion  incorporating small subcritical cluster solution crucial  1  precise determination entire shape particle size distribution function 2  wider applicability model experimental study nonmonotonic temperature variation leading particle evaporation  computational code implementing numerical method python available upon request   le",
        "Date_processed": "10january2024"
    },
    {
        "ID": 42,
        "Title_processed": "ne2001p native python implementation ne2001 galactic electron density model",
        "Authors_processed": "s.k.ocker j.m.cordes",
        "Abstract_processed": "abstract  model routinely used predict distance radio source lacking independent distance measure  present opensource package ne2001p  fully python implementation ne2001  model parameter identical ne2001 computational architecture optimized  galactic electron density model ne2001 describes multicomponent ionized structure milky way interstellar medium  ne2001 forward model dispersion scattering compact radio source  including pulsar  fast radio burst  agns  maser  model routinely used predict distance radio source lacking independent distance measure  present opensource package ne2001p  fully python implementation ne2001  model parameter identical ne2001 computational architecture optimized python  yielding small   1   numerical difference ne2001p fortran code  ne2001p used commandline python script available pypi  future package release include modular extension aimed providing shortterm improvement model accuracy  including modified thick disk scale height additional clump void  implementation ne2001 springboard nextgeneration galactic electron density model development   le",
        "Date_processed": "10january2024"
    },
    {
        "ID": 43,
        "Title_processed": "scalable gaussian process inference stan",
        "Authors_processed": "tillhoffmann jukka-pekkaonnela",
        "Abstract_processed": "abstract  full posterior inference ten thousand data point feasible laptop le 20 second  detail get started using popular interface cmdstanpy python cmdstanr r provided   gaussian process  gps  sophisticated distribution model functional data  whilst theoretically appealing  computationally cumbersome except small datasets  implement two method scaling gp inference stan  first  general sparse approximation using directed acyclic dependency graph  second  fast  exact method regularly spaced data modeled gps stationary kernel using fast fourier transform  based benchmark experiment  offer guidance practitioner decide different method parameterizations  consider two realworld example illustrate package  implementation follows stan design expose performant inference familiar interface  full posterior inference ten thousand data point feasible laptop le 20 second  detail get started using popular interface cmdstanpy python cmdstanr r provided   le",
        "Date_processed": "10january2024"
    },
    {
        "ID": 44,
        "Title_processed": "numerically computing finite temperature loop integral using pysecdec",
        "Authors_processed": "d.harnett siyuanli t.g.steele",
        "Abstract_processed": "abstract  phenomenon standard model extension  including phase transition  baryogenesis  gravitational wave  method developed enable application pysecdec  pythonlanguagebased package designed numerical calculation dimensionallyregulated loop integral  numerically evaluate finitetemperature loop integral imaginary ti  finitetemperature quantum field theory provides foundation many important phenomenon standard model extension  including phase transition  baryogenesis  gravitational wave  method developed enable application pysecdec  pythonlanguagebased package designed numerical calculation dimensionallyregulated loop integral  numerically evaluate finitetemperature loop integral imaginary time  matsubara  formalism  method consist two main element  inverse wick rotation convert finitetemperature loop integral form applicable pysecdec  asymptotic technique regulate accelerate convergence matsubara frequency summation  numerical pysecdec evaluation finitetemperature  twopoint threepoint  oneloop topology scalar field used illustrate validate new methodology  advantage finitetemperature pysecdec numerical method illustrated inclusion multiple mass external momentum scale   le",
        "Date_processed": "10january2024"
    },
    {
        "ID": 45,
        "Title_processed": "diffsph python tool compute diffuse signal dwarf spheroidal galaxy",
        "Authors_processed": "martinvollmann finnwelzmüller lovorkagajović",
        "Abstract_processed": "abstract  composed dark matter  discovery signal could offer valuable insight understanding nature dark matter  present  diffsph   python tool present version provides fast prediction diffuse signal radio frequency  also feature comprehensive module computation  j   far diffuse emission dwarf spheroidal satellite milky way ever observed  given dwarf galaxy predominantly composed dark matter  discovery signal could offer valuable insight understanding nature dark matter  present  diffsph   python tool present version provides fast prediction diffuse signal radio frequency  also feature comprehensive module computation  j    factor relevant indirect dark matter detection using gamma ray  routine coupled partonshower algorithm dark matter halo mass function stateoftheart kinematic fit  code also useful testing generic hypothesis  necessarily associated dark matter candidate  cosmicray electronpositron source dwarf galaxy  diffsph tool already employed search diffuse signal dwarf spheroidal galaxy using low frequency array  lofar    le",
        "Date_processed": "10january2024"
    },
    {
        "ID": 46,
        "Title_processed": "uniting gaia apogee unveil cosmic chemistry milky way disc",
        "Authors_processed": "tristancantat-gaudin morganfouesneau hans-walterrix anthonyg.a.brown ronalddrimmel alfredcastro-ginard shouryakhanna vasilybelokurov andrewr.casey",
        "Abstract_processed": "abstract  metallicitydependent flaring alphapoor disc  provide code constructing gaia selection function used study gaiaunlimited python package   spatial distribution galactic star different chemical abundance encodes information process drove formation evolution milky way  survey selection function indispensable analysing astronomical catalogue produced largescale survey  use selection function data modelling complex data different survey modelled simultaneously  introduce procedure constructing selection function sample red clump star parallax elemental abundance gaia mission  separately constructed selection function apogee dr17 red clump star  depends different observables different spatial coverage  combined two survey accounted joint selection function provide strong constraint radial vertical density distribution monoabundance population  gaia offering dense coverage solar neighbourhood  apogee reach larger distance near galactic plane  confirm radial density profile steepens increasing metallicity  combined sample also indicates metallicitydependent flaring alphapoor disc  provide code constructing gaia selection function used study gaiaunlimited python package   le",
        "Date_processed": "10january2024"
    },
    {
        "ID": 47,
        "Title_processed": "warp data reduction pipeline winered spectrograph",
        "Authors_processed": "satoshihamano yujiikeda shogootsubo harukikatoh keifukue noriyukimatsunaga daisuketaniguchi hideyokawakita keiichitakenaka soheikondo hiroakisameshima",
        "Abstract_processed": "abstract  present data reduction pipeline written python data obtained nearinfrared crossdispersed echelle spectrograph  winered  yield 091    135    spectrum resolving power  r  text  max   equiv   28000  70000 depending observing mode  pipeline developed efficiently extract spectrum  present data reduction pipeline written python data obtained nearinfrared crossdispersed echelle spectrograph  winered  yield 091    135    spectrum resolving power  r  text  max   equiv   28000  70000 depending observing mode  pipeline developed efficiently extract spectrum raw data high quality  comprises two mode  calibration science mode  calibration mode automatically produce flatfielding image  bad pixel map  echellogram distortion map dispersion solution set calibration data  using calibration image parameter  science data astronomical object reduced automatically using science mode  science mode also used realtime quick look data observation  example spectrum reduced warp presented  effect highly inclined slit image spectral resolution discussed   le",
        "Date_processed": "9january2024"
    },
    {
        "ID": 48,
        "Title_processed": "evecosim gridaware cosimulation platform design optimization electric vehicle charging infrastructure",
        "Authors_processed": "emmanuelbalogun elizabethbuechler siddharthbhela simonaonori ramrajagopal",
        "Abstract_processed": "abstract  grid transformer  control strategy  power distribution system  perform cost quantification analyze impact electric vehicle charging grid  pythonbased platform run receding horizon control scheme realtime operation oneshot control scheme planning problem  multitimescale dynamic different  enable electrification transportation system  important understand technology grid storage  solar photovoltaic system  control strategy aid deployment electric vehicle charging scale  work  present evecosim  cosimulation platform couple electric vehicle charging  battery system  solar photovoltaic system  grid transformer  control strategy  power distribution system  perform cost quantification analyze impact electric vehicle charging grid  pythonbased platform run receding horizon control scheme realtime operation oneshot control scheme planning problem  multitimescale dynamic different system simulate realistic scenario  demonstrate utility evecosim case study focused economic evaluation battery size reduce electricity cost considering impact fast charging power distribution grid  present qualitative quantitative evaluation battery size tabulated result  tabulated result delineate tradeoff candidate battery sizing solution  providing comprehensive insight decisionmaking uncertainty  additionally  demonstrate implication battery controller model fidelity system cost show fidelity battery controller completely change decision made planning electric vehicle charging site   le",
        "Date_processed": "9january2024"
    },
    {
        "ID": 49,
        "Title_processed": "statistical mechanical model crack growth",
        "Authors_processed": "michaelr.buche scottj.grutzik",
        "Abstract_processed": "abstract  analytic relation describe crack growth vital modeling experiment building theoretical understanding fracture  upon constructing idealized model system crack applying principle statistical thermodynamics  possible formulate rate thermally activated crack growth function load  result analytically intractable    analytic relation describe crack growth vital modeling experiment building theoretical understanding fracture  upon constructing idealized model system crack applying principle statistical thermodynamics  possible formulate rate thermally activated crack growth function load  result analytically intractable   asymptotically correct theory used obtain analytic approximation crack growth rate fundamental theoretical formulation  crack growth rate relation compared exist literature validated respect monte carlo calculation experiment  success approach encouraging future modeling endeavor might consider complicated fracture mechanism  inhomogeneity reactive environment   le",
        "Date_processed": "9january2024"
    },
    {
        "ID": 50,
        "Title_processed": "openskill faster asymmetric multiteam multiplayer rating system",
        "Authors_processed": "vivekjoshy",
        "Abstract_processed": "abstract  provides accurate representation individual player contribution speed computation rank  paper introduces openskill library  featuring python implementation plackettluce model among others  highlighting performance advantage predictive accuracy proprietary system like trueskill  openskill va  assessing comparing player skill online multiplayer gaming environment essential fair matchmaking player engagement  traditional ranking model like elo glicko2  designed twoplayer game  insufficient complexity multiplayer  asymmetric teambased match  address gap  openskill library offer suite sophisticated  fast  adaptable model tailored dynamic  drawing bayesian inference method  openskill provides accurate representation individual player contribution speed computation rank  paper introduces openskill library  featuring python implementation plackettluce model among others  highlighting performance advantage predictive accuracy proprietary system like trueskill  openskill valuable tool game developer researcher  ensuring responsive fair gaming experience efficiently adjusting player ranking based game outcome  library support time decay diligent documentation aid practical application  making robust solution nuanced world multiplayer ranking system  paper also acknowledges area future enhancement  partial play contribution weighting  emphasizing library ongoing development meet evolving need online gaming community   le",
        "Date_processed": "9january2024"
    },
    {
        "ID": 51,
        "Title_processed": "bubbledet python package compute functional determinant bubble nucleation",
        "Authors_processed": "andreasekstedt olivergould joonashirvonen",
        "Abstract_processed": "abstract  present python package  bubbledet  computing oneloop functional determinant around spherically symmetric background field  give nexttoleading order correction vacuum decay rate  zero temperature  bubble nucleation rate firstorder phase transition finite temperature  prediction gravitational wa  present python package  bubbledet  computing oneloop functional determinant around spherically symmetric background field  give nexttoleading order correction vacuum decay rate  zero temperature  bubble nucleation rate firstorder phase transition finite temperature  prediction gravitational wave signal cosmological phase transition  expected remove one leading source theoretical uncertainty  bubbledet applicable arbitrary scalar potential dimension seven  method fluctuation scalar field  including goldstone boson  gauge field  limited case determinant factorises product separate determinant  one field degree freedom  knowledge  bubbledet first package dedicated calculating functional determinant spherically symmetric background  le",
        "Date_processed": "9january2024"
    },
    {
        "ID": 52,
        "Title_processed": "cosmology ruler bookmark teaching outreach purpose penandpencil cosmological ruler calculator everyone especially student",
        "Authors_processed": "hervédole",
        "Abstract_processed": "abstract  grad student  university secondary school student visit  cosmology ruler bookmark included ready print  single doublesided   python script available github  allowing change adapted everyone need teaching outreach purpose  including cosmology applied scientific field  cosmology general  relation redshift cosmic epoch particular  usually obscure first year university student  secondary student  well journalist  politician general public scientist may interaction  identify need simple artifact scientist may give public clarify relation redshift physical quantity  meaningful nonscientist audience  simple bookmark aim completing previous  penandpencil cosmological calculator  nomogram  created small  handy  duplicable bookmark two printed side  showing corresponding cosmological value redshift  age  time  angular scale  1 kpc   using planck 2018 cosmology  recto  redshift range  01  1000  approach recombination logarithmic scale  verso  redshift range chosen  0  30  using linear scale  covering range current  future  detection galaxy  example given  illustrating eg  planck  jwst euclid capability complementarity  time interval nonlinearity  property galaxy cluster  handy bookmark may printed cheaply offered every student physic  undergrad grad student  university secondary school student visit  cosmology ruler bookmark included ready print  single doublesided   python script available github  allowing change adapted everyone need teaching outreach purpose  including cosmology applied scientific field   le",
        "Date_processed": "9january2024"
    },
    {
        "ID": 53,
        "Title_processed": "interior hull clean lattice parallelogram continued fraction",
        "Authors_processed": "gabrielkhan mizanr.khan riazr.khan pengzhao",
        "Abstract_processed": "abstract  interior hull lattice polygon convex closure lattice point interior polygon  paper give concrete description interior hull clean lattice parallelogram  clean parallelogram  mathbb  r  2  lattice parallelogram whose boundary contains lattice point vertex  using unimodular map identify clean paral  interior hull lattice polygon convex closure lattice point interior polygon  paper give concrete description interior hull clean lattice parallelogram  clean parallelogram  mathbb  r  2  lattice parallelogram whose boundary contains lattice point vertex  using unimodular map identify clean parallelogram parallelogram   p   n    whose vertex   00    10     n     a1  n     0   n   gcd   n  1   following stark geometric approach continued fraction show convergents continued fraction  na   viewed lattice point  appear onetotwo correspondence vertex interior hull parallelogram  consequently  continued fraction  na  many partial quotient  interior hull corresponding parallelogram many vertex  pleasing consequence work obtain elementary geometric interpretation sum partial quotient continued fraction  na   specifically  difference area clean parallelogram  p   n   area interior hull   le",
        "Date_processed": "8january2024"
    },
    {
        "ID": 54,
        "Title_processed": "gridpym python module handle grid diagram",
        "Authors_processed": "agnesebarbensi danieleceloria",
        "Abstract_processed": "abstract  diagram  widely used theoretical  computational applied knot theory  motivated question  bio  physical knot theory  introduce gridpym  sage compatible python module handle grid diagram  gridpym focus generating simplifying grid  modelling local transformation   grid diagram combinatorial version classical link diagram  widely used theoretical  computational applied knot theory  motivated question  bio  physical knot theory  introduce gridpym  sage compatible python module handle grid diagram  gridpym focus generating simplifying grid  modelling local transformation   le",
        "Date_processed": "8january2024"
    },
    {
        "ID": 55,
        "Title_processed": "change point detection event molecular simulation using dupin",
        "Authors_processed": "brandonl.butler domagojfijan sharonc.glotzer",
        "Abstract_processed": "abstract  study  consequently  method event detection lack generality  used one field easily used scientist field  present new pythonbased tool  dupin  allows universal event detection particle trajectory data irrespective system detail  dupin work creating signal representing sim  particle tracking commonly used study timedependent behavior many different type physical chemical system involving constituent span many length scale  including atom  molecule  nanoparticles  granular particle  even larger object  behavior interest studied using particle tracking information include thermodynamic phase transition  structural transition  protein folding  crystallization  common challenge study system involves change detection  change point detection discerns temporal signal undergoes change distribution  change local global  instantaneous prolonged  obvious subtle  moreover  systemwide change marking interesting physical chemical phenomenon  eg  crystallization liquid  often preceded event  eg  prenucleation cluster  localized occur anywhere anytime system  reason  detecting event particle trajectory generated molecular simulation challenging typically accomplished via ad hoc solution unique behavior system study  consequently  method event detection lack generality  used one field easily used scientist field  present new pythonbased tool  dupin  allows universal event detection particle trajectory data irrespective system detail  dupin work creating signal representing simulation partitioning signal based event  change within trajectory   approach allows study manual annotating event boundary would require prohibitive amount time  furthermore  dupin serve tool automated reproducible workflow  demonstrate application dupin using two example discus applicability wider class problem   le",
        "Date_processed": "8january2024"
    },
    {
        "ID": 56,
        "Title_processed": "developing elementary federated learning algorithm leveraging chatgpt",
        "Authors_processed": "miroslavpopovic markopopovic ivankastelan miodragdjukic ilijabasicevic",
        "Abstract_processed": "abstract  python testbed federated learning algorithm simple python fl framework easy use ml  ai developer need professional programmer  paper show also amenable emerging ai tool  paper  successfully developed three elementary fl algorithm using f  python testbed federated learning algorithm simple python fl framework easy use ml  ai developer need professional programmer  paper show also amenable emerging ai tool  paper  successfully developed three elementary fl algorithm using following three step process    specify context   ii  ask chatgpt complete server client  callback function   iii  verify generated code   le",
        "Date_processed": "8january2024"
    },
    {
        "ID": 57,
        "Title_processed": "equation state thermodynamics miscibility curve jovian planet giant exoplanet evolutionary model",
        "Authors_processed": "robertotejadaarevalo yubosu ankansur adamburrows",
        "Abstract_processed": "abstract  fidelity past  work  present set tool planetary evolutionfootnote  available url  http  githubcomrob685hheeosmisc   provides python interface table useful thermodynamic quantity  stateoftheart hhe equation state  pressuredependent immiscibility curve  particular  collection  equation state hydrogenhelium  hhe  mixture play vital role evolution structure gas giant planet exoplanets  recent equation state account hydrogenhelium interaction  coupled hydrogenhelium immiscibility curve  produce physical evolutionary model  accounting helium rain greater fidelity past  work  present set tool planetary evolutionfootnote  available url  http  githubcomrob685hheeosmisc   provides python interface table useful thermodynamic quantity  stateoftheart hhe equation state  pressuredependent immiscibility curve  particular  collection independent variable choice  provide script calculate variety thermodynamic derivative used model convection energy transport  centralized resource meant facilitate consolidate giant planet structural evolutionary modeling going forward   le",
        "Date_processed": "8january2024"
    },
    {
        "ID": 58,
        "Title_processed": "laspated library analysis spatiotemporal discrete data",
        "Authors_processed": "vincentguigues antonkleywegt giovanniamorim andrémazalkrauss victorhugonascimento",
        "Abstract_processed": "abstract  function calibrating intensity poisson process  second method us additional data estimate arrival intensity function covariates  describe python package perform various type space time discretization  also describe two package calibration model  one matlab one c  demonstrate  describe method  tool  software library called laspated  available github  http  githubcomvguigues  fit model using spatiotemporal data spacetime discretization  video tutorial library available youtube  consider two type method estimate nonhomogeneous poisson process space time  method approximate arrival intensity function poisson process discretizing space time  estimating arrival intensity function subregion time interval  method  typical dimension estimator large relative amount data  therefore performance estimator improved using additional data  first method us additional data add regularization term likelihood function calibrating intensity poisson process  second method us additional data estimate arrival intensity function covariates  describe python package perform various type space time discretization  also describe two package calibration model  one matlab one c  demonstrate advantage method compared basic maximum likelihood estimation simulated real data  experiment real data calibrate model arrival process emergency handled rio de janeiro emergency medical service   le",
        "Date_processed": "8january2024"
    },
    {
        "ID": 59,
        "Title_processed": "version control speaker recognition system",
        "Authors_processed": "quanwang ignaciolopezmoreno",
        "Abstract_processed": "abstract  hybrid deployment  compare different strategy quantitative metric various network configuration  present speakerversim  easilyextensible pythonbased simulation framework different serverside deployment strategy speaker recognition system   paper discus one challenging practical engineering problem speaker recognition system  version control model user profile  typical speaker recognition system consists two stage  enrollment stage  profile generated userprovided enrollment audio  runtime stage  voice identity runtime audio compared stored profile  technology advance  speaker recognition system need updated better performance  however  stored user profile updated accordingly  version mismatch result meaningless recognition result  paper  describe different version control strategy speaker recognition system carefully studied google year engineering practice  strategy categorized three group according deployed production environment  deviceside deployment  serverside deployment  hybrid deployment  compare different strategy quantitative metric various network configuration  present speakerversim  easilyextensible pythonbased simulation framework different serverside deployment strategy speaker recognition system   le",
        "Date_processed": "8january2024"
    },
    {
        "ID": 60,
        "Title_processed": "textmachina seamless generation machinegenerated text datasets",
        "Authors_processed": "aregmikaelsarvazyan joséángelgonzález marcfranco-salvador",
        "Abstract_processed": "abstract  task  similar strategy used compile datasets  tool currently unifies  scenario  introduce textmachina  modular extensible python framework  designed aid creation highquality  unbiased datasets build robust model mgtrelated task detection  attribution  boundary detection  provi  recent advancement large language model  llm  led highquality machinegenerated text  mgt   giving rise countless new use case application  however  easy access llm posing new challenge due misuse  address malicious usage  researcher released datasets effectively train model mgtrelated task  similar strategy used compile datasets  tool currently unifies  scenario  introduce textmachina  modular extensible python framework  designed aid creation highquality  unbiased datasets build robust model mgtrelated task detection  attribution  boundary detection  provides userfriendly pipeline abstract away inherent intricacy building mgt datasets  llm integration  prompt templating  bias mitigation  quality datasets generated textmachina assessed previous work  including shared task one hundred team trained robust mgt detector   le",
        "Date_processed": "8january2024"
    },
    {
        "ID": 61,
        "Title_processed": "toward comprehensive simulation framework hypergraphs pythonbase approach",
        "Authors_processed": "quocchuongnguyen trungkienle",
        "Abstract_processed": "abstract  dearth present barrier widespread adaptation hypergraph computational toolbox could enable research several area   introduce hyperrd  python package hypergraph computation  simulation  interoperability powerful python package graph hypergraph researc  hypergraphs  generalization graph edge contain two node  become increasingly prominent understanding complex network analysis  unlike graph  hypergraphs relatively supporting platform  dearth present barrier widespread adaptation hypergraph computational toolbox could enable research several area   introduce hyperrd  python package hypergraph computation  simulation  interoperability powerful python package graph hypergraph research   introduce two model hypergraph  general schelling model sir model  simulate hyperrd   le",
        "Date_processed": "8january2024"
    },
    {
        "ID": 62,
        "Title_processed": "dehallucinator iterative grounding llmbased code completion",
        "Authors_processed": "aryazeghbali michaelpradel",
        "Abstract_processed": "abstract  model initial prediction add reference prompt  evaluation applies approach task predicting api usage opensource python project  show dehallucinator consistently improves predicted code across four stateoftheart llm compared querying model code cur  large language model  llm  trained datasets publicly available source code established new stateoftheart code completion  however  model mostly unaware code already exists within specific project  preventing model making good use existing apis  instead  llm often invent   hallucinate   nonexistent apis produce variant already existing code  although api information available ides  input size limit llm prevents code completion technique including relevant context prompt  paper present dehallucinator  llmbased code completion technique ground prediction model novel combination retrieving suitable api reference iteratively querying model increasingly suitable context information prompt  approach exploit observation llm often predict code resembles desired completion  fails correctly refer already existing apis  dehallucinator automatically identifies projectspecific api reference related code prefix model initial prediction add reference prompt  evaluation applies approach task predicting api usage opensource python project  show dehallucinator consistently improves predicted code across four stateoftheart llm compared querying model code cursor  particular  approach improves edit distance predicted code 2351  recall correctly predicted api usage 2461  relative baseline   le",
        "Date_processed": "8january2024"
    },
    {
        "ID": 63,
        "Title_processed": "boldly going benchmark gone exposing bias shortcoming code generation evaluation",
        "Authors_processed": "ankityadav mayanksingh",
        "Abstract_processed": "abstract  proposed ass capability existing emerging model  study present largescale human evaluation humaneval mbpp  two widely used benchmark python code generation  focusing diversity difficulty  finding reveal significant bias towards limited number programming concept  negligible represe  motivated increasing popularity code generation human description using large language model  llm   several benchmark proposed ass capability existing emerging model  study present largescale human evaluation humaneval mbpp  two widely used benchmark python code generation  focusing diversity difficulty  finding reveal significant bias towards limited number programming concept  negligible representation concept  additionally  identify concerningly high proportion easy programming question  potentially leading overestimation model performance code generation task   le",
        "Date_processed": "8january2024"
    },
    {
        "ID": 64,
        "Title_processed": "need talk classification evaluation metric nlp",
        "Authors_processed": "petervickers loïcbarrault emiliomonti nikolaosaletras",
        "Abstract_processed": "abstract  translation  across task use superset metric rank model find informedness best capture ideal model characteristic  finally  release python implementation informedness following scikitlearn classifier format   natural language processing  nlp  classification task topic categorisation sentiment analysis  model generalizability generally measured standard metric accuracy  fmeasure  aucroc  diversity metric  arbitrariness application suggest agreement within nlp single best metric use  lack suggests sufficient examination underlying heuristic metric encodes  address compare several standard classification metric exotic  metric demonstrate randomguess normalised informedness metric parsimonious baseline task performance  show important choice metric  perform extensive experiment wide range nlp task including synthetic scenario  natural language understanding  question answering machine translation  across task use superset metric rank model find informedness best capture ideal model characteristic  finally  release python implementation informedness following scikitlearn classifier format   le",
        "Date_processed": "8january2024"
    },
    {
        "ID": 65,
        "Title_processed": "toward global fit using higgs stxs data lilith",
        "Authors_processed": "dangbaonhinguyen ducninhle sabinekraml quangloctran vandungle",
        "Abstract_processed": "abstract  talk  present program lilith  python package constraining new physic higgs measurement  discus usage signal strength result latest published version lilith  allows constraining deviation sm higgs coupling coupling modifier  moreover  discus ongoing development include hig  talk  present program lilith  python package constraining new physic higgs measurement  discus usage signal strength result latest published version lilith  allows constraining deviation sm higgs coupling coupling modifier  moreover  discus ongoing development include higgs stxs data smeft parametrizations lilith aim performing global fit atlas cm data  point  detailed information standard model uncertainty correlation important enable proper reuse experimental result   le",
        "Date_processed": "8january2024"
    },
    {
        "ID": 66,
        "Title_processed": "assessing ai detector identifying aigenerated code implication education",
        "Authors_processed": "weihungpan mingjiechok jonathanleongshanwong yungxinshin yeongshianpoon zhouyang chunyongchong davidlo meikuanlim",
        "Abstract_processed": "abstract  variant  collected dataset comprising 5069 sample  sample consisting textual description coding problem corresponding humanwritten python solution code  sample obtained various source  including 80 quescol  3264 kaggle  1725 leetcode  dataset  created 13 set code pro  educator increasingly concerned usage large language model  llm  chatgpt programming education  particularly regarding potential exploitation imperfection artificial intelligence generated content  aigc  detector academic misconduct  paper  present empirical study llm examined attempt bypass detection aigc detector  achieved generating code response given question using different variant  collected dataset comprising 5069 sample  sample consisting textual description coding problem corresponding humanwritten python solution code  sample obtained various source  including 80 quescol  3264 kaggle  1725 leetcode  dataset  created 13 set code problem variant prompt  used instruct chatgpt generate output  subsequently  assessed performance five aigc detector  result demonstrate existing aigc detector perform poorly distinguishing humanwritten code aigenerated code   le",
        "Date_processed": "8january2024"
    },
    {
        "ID": 67,
        "Title_processed": "effective benchmark optical turbulence modeling",
        "Authors_processed": "christopherjellen charlesnelson codybrownell johnburkhardt",
        "Abstract_processed": "abstract  strength optical turbulence  however  metric sufficient understanding relative quality model  introduce texttt  otbench  package  python package rigorous development evaluation optical turbulence strength prediction model  package provides consistent interface evaluating optical turbulence mod  optical turbulence present significant challenge communication  directed energy  imaging system  especially atmospheric boundary layer  effective modeling optical turbulence strength critical development deployment system  lack standard evaluation tool  especially longterm data set  modeling task  metric  baseline model  prevent effective comparison approach model  reduces ease reproducing result contributes overfitting local microclimates  performance characterized using evaluation metric provides insight applicability model predicting strength optical turbulence  however  metric sufficient understanding relative quality model  introduce texttt  otbench  package  python package rigorous development evaluation optical turbulence strength prediction model  package provides consistent interface evaluating optical turbulence model variety benchmark task data set  texttt  otbench  package includes range baseline model  including statistical  datadriven  deep learning model  provide sense relative model quality  texttt  otbench  also provides support adding new data set  task  evaluation metric  package available url  http  githubcomcdjellenotbench    le",
        "Date_processed": "7january2024"
    },
    {
        "ID": 68,
        "Title_processed": "cgkit code generation toolkit performant maintainable variant source code applied flashx hydrodynamics simulation",
        "Authors_processed": "johannrudi youngjunlee aidanh.chadha mohamedwahib klausweide jaredp.o'neal anshudubey",
        "Abstract_processed": "abstract  maintainability tool chain  present design new tool  parametrized source tree  control flow graph  recipe  tool implemented python  although tool agnostic programming language source code  focus cc fortran  code generation experiment demonstrate generation variant par  cgkit new code generation toolkit propose solution portability maintainability scientific computing application  development cgkit rooted urgent need created shifting landscape highperformance computing platform algorithmic complexity particular largescale multiphysics application  flashx  combination lead unique challenge including handling existing large code base fortran andor cc  subdivision code great variety unit supporting wide range physic numerical method  different parallelization technique distributed sharedmemory system accelerator device  heterogeneity computing platform requiring coexisting variant parallel algorithm  challenge demand developer determine custom abstraction granularity code generation  cgkit tackle standalone tool combined highly specific  argue  highly effective portability maintainability tool chain  present design new tool  parametrized source tree  control flow graph  recipe  tool implemented python  although tool agnostic programming language source code  focus cc fortran  code generation experiment demonstrate generation variant parallel algorithm  first  multithreaded variant basic axpy operation  scalarvector addition vectorvector multiplication  introduce application cgkit tool chain  second  variant parallel algorithm within hydrodynamics solver  called spark  flashx operates blockstructured adaptive mesh  summary  code generated cgkit achieves reduction 60  original ccfortran source code   le",
        "Date_processed": "6january2024"
    },
    {
        "ID": 69,
        "Title_processed": "leveraging highlevel synthesis large language model generate simulate deploy uniform random number generator hardware design",
        "Authors_processed": "jamest.meech",
        "Abstract_processed": "abstract  random number generator design using large language modelgenerated simulation dieharder randomness test suite  document large language model chat log  python script  verilog script  simulation result used case study  believe method hardware design generation coupled open source silicon 130 nm de  present new highlevel synthesis methodology using large language model tool generate hardware design  methodology us exclusively opensource tool excluding large language model  case study  use methodology generate permuted congruential random number generator design wishbone interface  verify functionality quality random number generator design using large language modelgenerated simulation dieharder randomness test suite  document large language model chat log  python script  verilog script  simulation result used case study  believe method hardware design generation coupled open source silicon 130 nm design tool revolutionize applicationspecific integrated circuit design  methodology significantly lower bar entry building domainspecific computing accelerator internet thing proof concept prototype later fabrication modern process node   le",
        "Date_processed": "5january2024"
    },
    {
        "ID": 70,
        "Title_processed": "cruxeval benchmark code reasoning understanding execution",
        "Authors_processed": "alexgu baptisterozière hughleather armandosolar-lezama gabrielsynnaeve sidai.wang",
        "Abstract_processed": "abstract  present cruxeval  code reasoning  understanding  execution evaluation   benchmark consisting 800 python function  313 line   function come inputoutput pair  leading two natural task  input prediction output prediction  first  propose generic recipe generating execution benchmark used create f  present cruxeval  code reasoning  understanding  execution evaluation   benchmark consisting 800 python function  313 line   function come inputoutput pair  leading two natural task  input prediction output prediction  first  propose generic recipe generating execution benchmark used create future variation benchmark  second  evaluate twenty code model benchmark discover many recent highscoring model humaneval show improvement benchmark  third  show simple cot finetuning scheme improve performance benchmark remain far solving  best setup  gpt4 chain thought  cot   achieves pas  1 75  81  input output prediction  respectively  contrast  code llama 34b achieves pas  1 50  46  input output prediction  highlighting gap open closed source model  model close acing cruxeval  provide example consistent gpt4 failure simple program lens code reasoning capability area improvement   le",
        "Date_processed": "5january2024"
    },
    {
        "ID": 71,
        "Title_processed": "physic analysis hllhc concept pipeline practice analysis grand challenge",
        "Authors_processed": "alexanderheld elliottkauffman oksanashadura andrewwightman",
        "Abstract_processed": "abstract  need hllhc allow probing increased set functionality  another focus showcase reference agc implementation  heavily based hep python ecosystem us modern analysis facility  integration various data delivery strategy described  resulting multiple analysis pipeline compared ea  realistic environment prototyping  studying improving analysis workflow crucial element way towards userfriendly physic analysis hllhc scale  irishep analysis grand challenge  agc  provides environment  defines scalable modular analysis task capture relevant workflow aspect  ranging largescale data processing handling systematic uncertainty statistical inference analysis preservation  based publicly available open data  agc provides point contact broader community  multiple different implementation analysis task make use various pipeline software stack already exist  contribution present updated agc analysis task  feature machine learning component expanded analysis complexity  including handling extended realistic set systematic uncertainty  change align agc analysis need hllhc allow probing increased set functionality  another focus showcase reference agc implementation  heavily based hep python ecosystem us modern analysis facility  integration various data delivery strategy described  resulting multiple analysis pipeline compared   le",
        "Date_processed": "5january2024"
    },
    {
        "ID": 72,
        "Title_processed": "le empirical study configuration issue python pypi ecosystem",
        "Authors_processed": "yunpeng ruidahu ruokewang cuiyungao shuqingli michaelr.lyu",
        "Abstract_processed": "abstract  python widely used opensource community  largely owing extensive support diverse thirdparty library within pypi ecosystem  nevertheless  utilization thirdparty library potentially lead conflict dependency  prompting researcher develop dependency conflict detector  moreover  endeavor made  python widely used opensource community  largely owing extensive support diverse thirdparty library within pypi ecosystem  nevertheless  utilization thirdparty library potentially lead conflict dependency  prompting researcher develop dependency conflict detector  moreover  endeavor made automatically infer dependency  approach focus versionlevel check inference  based assumption configuration library pypi ecosystem correct  however  study reveals assumption universally valid  relying solely versionlevel check prof inadequate ensuring compatible runtime environment  paper  conduct empirical study comprehensively study configuration issue pypi ecosystem  specifically  propose pyconf  sourcelevel detector  detecting potential configuration issue  pyconf employ three distinct check  targeting setup  packing  usage stage library  respectively  evaluate effectiveness current automatic dependency inference approach  build benchmark called vlibs  comprising library release pas three check pyconf  identify 15 kind configuration issue find 183864 library release suffer potential configuration issue  remarkably  68  issue detected via sourcelevel check  experiment result show advanced automatic dependency inference approach  pyego  successfully infer dependency 65  library release  primary failure stem dependency conflict absence required library generated configuration  based empirical result  derive six finding draw two implication opensource developer future research automatic dependency inference   le",
        "Date_processed": "4january2024"
    },
    {
        "ID": 73,
        "Title_processed": "dynamic programming polymorphic semiring algebraic shortcut fusion",
        "Authors_processed": "maxa.little xihe ugurkayas",
        "Abstract_processed": "abstract  constraint algebra  demonstrate effectiveness formalism example application arising signal processing  bioinformatics reliability engineering  python software implementing algorithm downloaded  http  wwwmaxlittlenetsoftwaredppolyalgzip   dynamic programming  dp  algorithmic design paradigm efficient  exact solution otherwise intractable  combinatorial problem  however  dp algorithm design often presented adhoc manner  sometimes difficult justify algorithm correctness  address issue  paper present rigorous algebraic formalism systematically deriving dp algorithm  based semiring polymorphism  start specification  construct algorithm compute required solution selfevidently correct exhaustively generates evaluates possible solution meeting specification  derive  use shortcut fusion  implementation algorithm efficient correct  also demonstrate  use semiring lifting  specification augmented combinatorial constraint  showing constraint fused algorithm  furthermore demonstrate existing dp algorithm given combinatorial problem abstracted original context repurposed  approach applied full scope combinatorial problem expressible term semirings  includes  example  optimal probability viterbi decoding  probabilistic marginalization  logical inference  fuzzy set  differentiable softmax  relational provenance query  approach  building idea existing literature constructive algorithmics  exploit generic property polymorphic function  tupling formal sum algebraic simplification arising constraint algebra  demonstrate effectiveness formalism example application arising signal processing  bioinformatics reliability engineering  python software implementing algorithm downloaded  http  wwwmaxlittlenetsoftwaredppolyalgzip   le",
        "Date_processed": "4january2024"
    },
    {
        "ID": 74,
        "Title_processed": "data integration framework virtual reality enabled digital twin",
        "Authors_processed": "florianstadtmann harypirajanmahalingam adilrasheed",
        "Abstract_processed": "abstract  data integration framework static realtime data various source asset environment presented allows collecting processing data python deploying data realtime unity different device  including virtual reality headset  integration data terrain  weather  asset geometry  digital twin becoming increasingly popular across many industry realtime data streaming  processing  visualization  allow stakeholder monitor  diagnose  optimize asset  emerging technology used immersive visualization  virtual reality  open many new possibility intuitive access monitoring remote asset digital twin  specifically relevant floating wind farm  access often limited  however  integration data multiple source access different device including virtual reality headset challenging  work  data integration framework static realtime data various source asset environment presented allows collecting processing data python deploying data realtime unity different device  including virtual reality headset  integration data terrain  weather  asset geometry explained detail  realtime data stream asset client implemented reviewed  instruction given code required connect python script unity application across device  data integration framework implemented digital twin floating wind turbine onshore wind farm  potential future research discussed   le",
        "Date_processed": "4january2024"
    },
    {
        "ID": 75,
        "Title_processed": "fast continual learning hybrid control policy using generalized bender decomposition",
        "Authors_processed": "xuanlin",
        "Abstract_processed": "abstract  around obstacle  result show significantly le data previous work  solver reach competitive speed offtheshelf solver gurobi despite python overhead   hybrid model predictive control continuous discrete variable widely applicable robotic control task  especially involving contact environment  due combinatorial complexity  solving speed hybrid mpc insufficient realtime application  paper  proposed hybrid mpc solver based generalized bender decomposition  gbd   algorithm enumerates store cutting plane online inside finite buffer  short coldstart phase  stored cut provide warmstarts new problem instance enhance solving speed  despite disturbance randomly changing environment  solving speed maintains  leveraging sparsity feasibility cut  also propose fast algorithm bender master problem  solver validated controlling cartpole system randomly moving soft contact wall  freeflying robot navigating around obstacle  result show significantly le data previous work  solver reach competitive speed offtheshelf solver gurobi despite python overhead   le",
        "Date_processed": "4january2024"
    },
    {
        "ID": 76,
        "Title_processed": "chebyshev subdivision reduction method solving multivariable system equation",
        "Authors_processed": "erikparkinson katewall janeslagle danieltreuhaft xanderdelabruere samuelgoldrup timothykeith petercall tylerj.jarvis",
        "Abstract_processed": "abstract  also work well higher dimension  test show algorithm outperforms standard method problem finding real zero bounded domain  python implementation algorithm publicly available   present new algorithm finding isolated zero system realvalued function bounded interval  mathbb  r  n   us chebyshev proxy method combined mixture subdivision  reduction method  elimination check leverage special property chebyshev polynomial  prove method rquadratic convergence locally near simple zero system  also analyze temporal complexity numerical stability algorithm provide numerical evidence dimension three method fast accurate wide range problem  algorithm also work well higher dimension  test show algorithm outperforms standard method problem finding real zero bounded domain  python implementation algorithm publicly available   le",
        "Date_processed": "4january2024"
    },
    {
        "ID": 77,
        "Title_processed": "moduleguardunderstanding detecting module conflict python ecosystem",
        "Authors_processed": "ruofanzhu xingyuwang chengweiliu zhengzixu wenboshen ruichang yangliu",
        "Abstract_processed": "abstract  python become one popular programming language software development due simplicity  readability  versatility   python become one popular programming language software development due simplicity  readability  versatility  python ecosystem grows  developer face increasing challenge avoiding module conflict  occur different package namespace module  unfortunately  existing work neither investigated module conflict comprehensively provided tool detect conflict  therefore  paper systematically investigates module conflict problem impact python ecosystem  propose novel technique called instsimulator  leverage semantics installation simulation achieve accurate efficient module extraction  based  implement tool called moduleguard detect module conflict python ecosystem  study  first collect 97 mc issue  classify characteristic cause mc issue  summarize three different conflict pattern  analyze potential threat   conducted largescale analysis whole pypi ecosystem  42 million package  github popular project  3711 project  detect mc pattern analyze potential impact  discovered module conflict still impact numerous tpls github project  primarily due developer  lack understanding module within direct dependency  mention module transitive dependency  work reveals python shortcoming handling naming conflict provides tool guideline developer detect conflict   le",
        "Date_processed": "4january2024"
    },
    {
        "ID": 78,
        "Title_processed": "examining challenge archiving instagram",
        "Authors_processed": "rachelzheng michelec.weigle",
        "Abstract_processed": "abstract  minority  replayable instagram memento exist public archive contain valuable data studying disinformation instagram  mind  developed python script web scrape instagram memento  august 2023  python script scrape wayback machine archive instagram account page  prevent spread disinformation instagram  need study account content disinformation actor  however  due malicious nature  instagram often ban account responsible spreading disinformation  making account inaccessible live web  way study content banned account public web archive internet archive  however  many issue present archiving instagram page  specifically  focused issue many wayback machine instagram memento redirect instagram login page  study  determined memento instagram account page wayback machine began redirecting instagram login page august 2019  also found instagram memento archivetoday  arquivopt  permacc also well archived term quantity quality  moreover  unsuccessful attempt archive katy perry instagram account page archivetoday  arquivopt  conifer  although minority  replayable instagram memento exist public archive contain valuable data studying disinformation instagram  mind  developed python script web scrape instagram memento  august 2023  python script scrape wayback machine archive instagram account page november 7  2012 june 8  2018   le",
        "Date_processed": "3january2024"
    },
    {
        "ID": 79,
        "Title_processed": "nirdust probing hot dust emission around type 2 agn using kband spectrum",
        "Authors_processed": "gaiagaspar martínchalela juancabral joséalacoria damiánmast rubénj.díaz",
        "Abstract_processed": "abstract    achieve  developed nirdust  python package modeling kband spectrum  estimate dust temperature characterize involved uncertainty  tested synthetic real spectrum order check performance suitability physical model different type data  test synthetic spectrum demonstrated  hot dust proximity agns strongly emits near infrared producing red excess  type 2 source  modeled measure temperature  era high spatialresolution multiwavelength data  mapping hot dust around supermassive black hole important effort achieve complete picture dust role distribution around compact object  work propose methodology detect hot dust emission proximity type 2 agns measure temperature using kband spectrum   c   22       achieve  developed nirdust  python package modeling kband spectrum  estimate dust temperature characterize involved uncertainty  tested synthetic real spectrum order check performance suitability physical model different type data  test synthetic spectrum demonstrated obtained result influenced signaltonoise ratio  sn  input spectrum  however  accurately characterized uncertainty  remained  sim  150 k average sn per pixel exceeding 20  applying nirdust ngc 5128  centaurus   observed gemini south telescope  estimated dust temperature 662 667 k flamingos2 spectrum 697 607 k gnirs spectrum using two different approach   le",
        "Date_processed": "3january2024"
    },
    {
        "ID": 80,
        "Title_processed": "cytnx library tensor network",
        "Authors_processed": "kai-hsinwu chang-tenglin kehsu hao-tihung manuelschneider chia-minchung ying-jerkao pochungchen",
        "Abstract_processed": "abstract  designed classical quantum physic simulation called cytnx  pronounced scitens   library provides almost identical interface syntax c python  allowing user effortlessly switch two language  aiming quick learning process new user tensor network algorithm  interface resemble popular  introduce tensor network library designed classical quantum physic simulation called cytnx  pronounced scitens   library provides almost identical interface syntax c python  allowing user effortlessly switch two language  aiming quick learning process new user tensor network algorithm  interface resemble popular python scientific library like numpy  scipy  pytorch  multiple global abelian symmetry easily defined implemented  cytnx also provides new tool called network allows user store large tensor network perform tensor network contraction optimal order automatically  integration cuquantum  tensor calculation also executed efficiently gpus  present benchmark result tensor operation device  cpu gpu  also discus feature higherlevel interface added future   le",
        "Date_processed": "3january2024"
    },
    {
        "ID": 81,
        "Title_processed": "permanent magnet system study interaction magnetic nanoparticles cell microslide channel",
        "Authors_processed": "leonabelmann eunheuigwag baeckkyoungsung",
        "Abstract_processed": "abstract  crosslinked dextran ironoxide clustertype particle  micromod   python script magnetic force calculation particle trajectory modeling well source file 3d print made available design easily adapted optimized geometry   optimized design permanent magnet system study effect magnetic nanoparticles cell culture microslide channel  produced two design  one based large cylindrical magnet applies uniform force density 6 mnm  3  soft magnetic ironoxide spherical nanoparticles field strength 300 mt  achieved force uniformity better 14  channel area leading concentration variation measurement resolution  second design aimed maximizing force using halbach array  indeed increased force one order magnitude force density value 400 mnm  3   cost uniformity  however  latter system used trap magnetic nanoparticles efficiently create concentration gradient  demonstrated design analyzing effect magnetic force cell viability human hepatoma hepg2 cell presence bare fe  2   3  crosslinked dextran ironoxide clustertype particle  micromod   python script magnetic force calculation particle trajectory modeling well source file 3d print made available design easily adapted optimized geometry   le",
        "Date_processed": "3january2024"
    },
    {
        "ID": 82,
        "Title_processed": "raphtory temporal graph engine rust python",
        "Authors_processed": "bensteer naomiarnold cheicktidianeba renaudlambiotte haaroonyousaf lucasjeub fabianmurariu shivamkapoor pedrorico rachelchan louischan jamesalford richardg.clegg felixcuadrado matthewrussellbarnes peijiezhong johnn.pouguébiyong alhamzaalnaimi",
        "Abstract_processed": "abstract  structure evolution  extensible graphql server deployment application built top  raphtory core engine built rust  efficiency  python interface  ease use  raphtory developed network scientist  background physic  applied mathematics  engineering computer science  use across acad  raphtory platform building analysing temporal network  library includes method creating network variety data source  algorithm explore structure evolution  extensible graphql server deployment application built top  raphtory core engine built rust  efficiency  python interface  ease use  raphtory developed network scientist  background physic  applied mathematics  engineering computer science  use across academia industry   le",
        "Date_processed": "3january2024"
    },
    {
        "ID": 83,
        "Title_processed": "performance evaluation gps trajectory rasterization method",
        "Authors_processed": "necipenesgengec ergintari",
        "Abstract_processed": "abstract  gps trajectory data rasterization using spatial join function qgis  postgisqgis  iterative spatial structured grid aggregation implementation coded python programming language  implementation also parallelizable  parallelization also included fourth method  according result experiment carried w  availability global positioning system  gps  trajectory data increasing along availability different gps receiver increasing use various mobility service  gps trajectory important data source used traffic density detection  transport mode detection  mapping data inference use different method image processing machine learning method  data size increase  efficient representation type data becoming difficult used method  common approach representation gps trajectory information average speed  bearing  etc  raster image form applying analysis method  study  evaluate gps trajectory data rasterization using spatial join function qgis  postgisqgis  iterative spatial structured grid aggregation implementation coded python programming language  implementation also parallelizable  parallelization also included fourth method  according result experiment carried example gps trajectory dataset  qgis method postgisqgis method showed relatively low performance respect method using metric total processing time  postgisqgis method achieved best result spatial join though total performance decreased quickly test area size increase  hand  method  performance decrease directly proportional gps point  method  performance increased proportional increase number processor core andor multiple computing cluster   le",
        "Date_processed": "3january2024"
    },
    {
        "ID": 84,
        "Title_processed": "simulationbased approach kinematics analysis quadruped robot prototype leg testing",
        "Authors_processed": "abidshahriar",
        "Abstract_processed": "abstract  forward kinematics  measure position  joint angle calculated using inverse kinematics  mathematical derivation joint angle derived  pythonbased simulation done verify simulate robot locomotion  approach tested beneficial method  kinematics analysis crucial part multiple jointenabled robot  multijoint enabled robot requires extensive mathematical calculation done end effector position determined respect connective joint involved respective frame specific coordinate system  locomotive quadruped robot  essential determine two type kinematics robot leg position coordinate  part forward kinematics  measure position  joint angle calculated using inverse kinematics  mathematical derivation joint angle derived  pythonbased simulation done verify simulate robot locomotion  approach tested beneficial method pythonbased code used make easier serial communication therefore could deployed microcontroller unit interact prototype leg   le",
        "Date_processed": "2january2024"
    },
    {
        "ID": 85,
        "Title_processed": "outlier ranking largescale public health stream",
        "Authors_processed": "ananyajoshi tinatownes nolangormley lukeneureiter ronirosenfeld bryanwilder",
        "Abstract_processed": "abstract  best across traditional outlier detection metric humanexpert evaluation using public health data stream  importantly  expert used opensource python implementation since april 2023 report identifying outlier worth investigating 91x faster prior baseline  organization readily adapt implementation  disease control expert inspect public health data stream daily outlier worth investigating  like corresponding data quality issue disease outbreak  however  examine thousand maximallytied outlier returned univariate outlier detection method applied largescale public health data stream  help expert distinguish important outlier thousand tied outlier  propose new task algorithm rank output univariate method applied many stream  novel algorithm task  leverage hierarchical network extreme value analysis  performed best across traditional outlier detection metric humanexpert evaluation using public health data stream  importantly  expert used opensource python implementation since april 2023 report identifying outlier worth investigating 91x faster prior baseline  organization readily adapt implementation create ranking output tailored univariate method across largescale stream   le",
        "Date_processed": "2january2024"
    },
    {
        "ID": 86,
        "Title_processed": "lagrangian theory galaxy shape statistic",
        "Authors_processed": "shi-fanchen nickolaskokron",
        "Abstract_processed": "abstract  formulate lagrangian perturbation theory galaxy intrinsic alignment compute resulting auto cross power spectrum galaxy shape  density matter 1loop order  model represents consistent effectivetheory description galaxy shape including resummation longwavelength displacement damp baryon acoustic oscillation  includes one linear  three  formulate lagrangian perturbation theory galaxy intrinsic alignment compute resulting auto cross power spectrum galaxy shape  density matter 1loop order  model represents consistent effectivetheory description galaxy shape including resummation longwavelength displacement damp baryon acoustic oscillation  includes one linear  three quadratic two cubic dimensionless bias coefficient order  along counterterms stochastic contribution whose structure derive  compare lagrangian model threedimensional helicity spectrum halo shape measured nbody simulation akitsu et al  2023  find excellent agreement perturbative scale testing number restrictive bias parametrizations  calculation presented immediately relevant analysis cosmic shear survey spectroscopic shape measurement  make fast fftlogbased code spinosaurus publicly available publication   le",
        "Date_processed": "2january2024"
    },
    {
        "ID": 87,
        "Title_processed": "spiker framework generation efficient spiking neural network fpga accelerator inference edge",
        "Authors_processed": "alessiocarpegna alessandrosavino stefanodicarlo",
        "Abstract_processed": "abstract  hardware snn  library highly efficient neuron architecture  design framework  enabling development complex neural network accelerator line python code  spiker tested two benchmark datasets  mnist spiking heidelberg digit  shd   mnist  demonstrates competitive performance compared stateofthe  including artificial neural network embedded system edge allows application exploit artificial intelligence capability directly within device operating network periphery  paper introduces spiker  comprehensive framework generating efficient  lowpower  lowarea customized spiking neural network  snn  accelerator fpga inference edge  spiker present configurable multilayer hardware snn  library highly efficient neuron architecture  design framework  enabling development complex neural network accelerator line python code  spiker tested two benchmark datasets  mnist spiking heidelberg digit  shd   mnist  demonstrates competitive performance compared stateoftheart snn accelerator  outperforms term resource allocation  requirement 7612 logic cell 18 block ram  brams   make fit small fpga  power consumption  draining 180mw complete inference input image  latency comparable one observed stateoftheart  780usimg  author  knowledge  spiker first snn accelerator tested shd  case  accelerator requires 18268 logic cell 51 bram  overall power consumption 430mw latency 54 u complete inference input data  underscore significance spiker hardwareaccelerated snn landscape  making excellent solution deploy configurable tunable snn architecture resource powerconstrained edge application   le",
        "Date_processed": "2january2024"
    },
    {
        "ID": 88,
        "Title_processed": "typeevalpy microbenchmarking framework python type inference tool",
        "Authors_processed": "ashwinprasadshivarpatnavenkatesh samkuttysabu jiaweiwang amirm.mir lili ericbodden",
        "Abstract_processed": "abstract  light growing interest type inference research python  researcher practitioner require standardized process ass performance various type inference technique  paper introduces typeevalpy  comprehensive microbenchmarking framework evaluating type inference tool  typeevalpy contains 154 code snippet  light growing interest type inference research python  researcher practitioner require standardized process ass performance various type inference technique  paper introduces typeevalpy  comprehensive microbenchmarking framework evaluating type inference tool  typeevalpy contains 154 code snippet 845 type annotation across 18 category target various python feature  framework manages execution containerized tool  transforms inferred type standardized format  produce meaningful metric assessment  analysis  compare performance six type inference tool  highlighting strength limitation  finding provide foundation research optimization domain python type inference   le",
        "Date_processed": "2january2024"
    },
    {
        "ID": 89,
        "Title_processed": "attempt generate new bridge type latent space variational autoencoder",
        "Authors_processed": "hongjunzhang",
        "Abstract_processed": "abstract    rotation  horizontal scale  vertical scale  obtain image dataset threespan beam bridge  arch bridge  cablestayed bridge suspension bridge  based python programming language  tensorflow kera deep learning platform framework  variational autoencoder constructed trained  lowdimensional bridgetype latent space conve  try generate new bridge type using generative artificial intelligence technology  grayscale image bridge facade change component width rendered 3dsmax animation software  opencv module performed appropriate amount geometric transformation  rotation  horizontal scale  vertical scale  obtain image dataset threespan beam bridge  arch bridge  cablestayed bridge suspension bridge  based python programming language  tensorflow kera deep learning platform framework  variational autoencoder constructed trained  lowdimensional bridgetype latent space convenient vector operation obtained  variational autoencoder combine two bridge type basis original human one new bridge type  generative artificial intelligence technology assist bridge designer bridgetype innovation  used copilot   le",
        "Date_processed": "1january2024"
    },
    {
        "ID": 90,
        "Title_processed": "attempt generate new bridge type latent space generative adversarial network",
        "Authors_processed": "hongjunzhang",
        "Abstract_processed": "abstract  artificial intelligence technology  symmetric structured image dataset threespan beam bridge  arch bridge  cablestayed bridge suspension bridge used  based python programming language  tensorflow kera deep learning platform framework  well wasserstein loss function lipschitz constraint  generative adversarial network con  try generate new bridge type using generative artificial intelligence technology  symmetric structured image dataset threespan beam bridge  arch bridge  cablestayed bridge suspension bridge used  based python programming language  tensorflow kera deep learning platform framework  well wasserstein loss function lipschitz constraint  generative adversarial network constructed trained  obtained low dimensional bridgetype latent space sampling  new bridge type asymmetric structure generated  generative adversarial network create new bridge type organically combining different structural component basis human original bridge type  certain degree human original ability  generative artificial intelligence technology open imagination space inspire humanity   le",
        "Date_processed": "1january2024"
    },
    {
        "ID": 91,
        "Title_processed": "poker hand history file format specification",
        "Authors_processed": "juhokim",
        "Abstract_processed": "abstract  covering 11 different variant phh format  building previous work pokerkit  premier poker hand simulation tool  demonstrate usage opensource python implementation phh parser  source code parser available github  http  githubcomuoftcprgpokerkit  paper introduces poker hand history  phh  file format  designed standardize recording poker hand across different game variant  despite poker widespread popularity mainstream culture mind sport prominence field artificial intelligence  ai  research benchmark imperfect information ai agent  lack consistent format human use document poker hand across different variant also easily parsed machine  address gap literature  propose phh format provides concise humanreadable machinefriendly representation hand history comprehensively capture various detail hand  ranging initial game parameter action contextual parameter including limited venue  player  time control information  supplementary  provide 10000 hand covering 11 different variant phh format  building previous work pokerkit  premier poker hand simulation tool  demonstrate usage opensource python implementation phh parser  source code parser available github  http  githubcomuoftcprgpokerkit  le",
        "Date_processed": "1january2024"
    },
    {
        "ID": 92,
        "Title_processed": "data dialogue chatgpt using code interpreter simulate analyse experimental data",
        "Authors_processed": "andrewlow z.yaseminkalender",
        "Abstract_processed": "abstract  complete introductory mechanic laboratory activity using code interpreter  recent plugin allows user generate analyse data writing running python code  behind scene   uploading common  spring constant  lab activity using code interpreter  investigate ability chatgpt interpret activity  genus  artificial intelligence  ai  potential fundamentally change educational landscape  far  much physic education research relating ai focused lecturebased assessment ability chatgpt answer conceptual survey traditional examstyle question  study  shift focus investigating chatgpt ability complete introductory mechanic laboratory activity using code interpreter  recent plugin allows user generate analyse data writing running python code  behind scene   uploading common  spring constant  lab activity using code interpreter  investigate ability chatgpt interpret activity  generate realistic model data  produce linefit  calculate reduced chi square statistic  analysing interaction chatgpt  along python code generated code interpreter  ass quality accuracy chatgpt response depends different level prompt detail  find although chatgpt capable completing lab activity generating plausiblelooking data  quality output highly dependent detail specificity text prompt provided  find data generation process adopted chatgpt study lead heteroscedasticity simulated data  may difficult novice learner spot  also find real experimental data uploaded via code interpreter  chatgpt capable correctly plotting fitting data  calculating spring constant associated uncertainty  calculating reduced chi square statistic  work offer new insight capability code interpreter within laboratory setting highlight variety textprompt strategy effective use code interpreter lab context   le",
        "Date_processed": "31december2023"
    },
    {
        "ID": 93,
        "Title_processed": "parallel sampling decomposable graph using markov chain junction tree",
        "Authors_processed": "mohamadelmasri",
        "Abstract_processed": "abstract  singlemove variate  outperforms current stateofthearts method term accuracy computational efficiency  implementation work available python package paralleldg   bayesian inference undirected graphical model mostly restricted class decomposable graph  enjoy rich set property making amenable highdimensional problem  parameter inference straightforward setup  inferring underlying graph challenge driven computational difficulty exploring space decomposable graph  work make two contribution address problem  first  provide sufficient necessary condition multiedge perturbation maintain decomposability graph  using  characterize simple class partition efficiently classify edge perturbation whether maintain decomposability  second  propose novel parallel nonreversible markov chain monte carlo sampler distribution junction tree representation graph  every step  parallel sampler executes simultaneously edge perturbation within partition  simulation  demonstrate efficiency new edge perturbation condition class partition  find parallel sampler yield improved mixing property comparison singlemove variate  outperforms current stateofthearts method term accuracy computational efficiency  implementation work available python package paralleldg   le",
        "Date_processed": "31december2023"
    },
    {
        "ID": 94,
        "Title_processed": "toolbox modelling engagement educational video",
        "Authors_processed": "yuxiangqiu karimdjemili deniselezi aaneelshalman maríapérez-ortiz emineyilmaz johnshawe-taylor sahanbulathwela",
        "Abstract_processed": "abstract    ai   personalising education global population could cornerstone new educational system future  work present peekc dataset truelearn python library  contains dataset series online learner state model essential facilitate research learner engagement modellingtruelearn family model w  advancement utility artificial intelligence  ai   personalising education global population could cornerstone new educational system future  work present peekc dataset truelearn python library  contains dataset series online learner state model essential facilitate research learner engagement modellingtruelearn family model designed following  open learner  concept  using humanlyintuitive user representation  family scalable  online model also help endusers visualise learner model  may future facilitate user interaction modelsrecommenders  extensive documentation coding example make library highly accessible machine learning developer educational data mining learning analytics practitioner  experiment show utility dataset library predictive performance significantly exceeding comparative baseline model  dataset contains large amount airelated educational video  interest building validating aispecific educational recommenders   le",
        "Date_processed": "30december2023"
    },
    {
        "ID": 95,
        "Title_processed": "laboratory experiment modelbased reinforcement learning adaptive optic control",
        "Authors_processed": "jalonousiainen byronengler markuskasper changrajani tapiohelin cédrict.heritier saschap.quanz adrianm.glauser",
        "Abstract_processed": "abstract  selfcalibrating aspect method  new implementation ghost running pytorch introduces around 700 microsecond addition hardware  pipeline  python interface latency  opensource welldocumented code implementation specify requirement rtc pipeline  also discus important hyperparameters  direct imaging earthlike exoplanets one prominent scientific driver next generation groundbased telescope  typically  earthlike exoplanets located small angular separation host star  making detection difficult  consequently  adaptive optic  ao  system control algorithm must carefully designed distinguish exoplanet residual light produced host star  new promising avenue research improve ao control build datadriven control method reinforcement learning  rl   rl active branch machine learning research field  control system learned interaction environment  thus  rl seen automated approach ao control  usage entirely turnkey operation  particular  modelbased reinforcement learning  mbrl  shown cope temporal misregistration error  similarly  demonstrated adapt nonlinear wavefront sensing efficient training execution  work  implement adapt rl method called policy optimization ao  po4ao  ghost test bench eso headquarters  demonstrate strong performance method laboratory environment  implementation allows training performed parallel inference  crucial onsky operation  particular  study predictive selfcalibrating aspect method  new implementation ghost running pytorch introduces around 700 microsecond addition hardware  pipeline  python interface latency  opensource welldocumented code implementation specify requirement rtc pipeline  also discus important hyperparameters method  source latency  possible path lower latency implementation   le",
        "Date_processed": "30december2023"
    },
    {
        "ID": 96,
        "Title_processed": "knowledge large language model needed causal reasoning",
        "Authors_processed": "hengruicai shengjieliu ruisong",
        "Abstract_processed": "abstract  paper explores causal reasoning large language model  llm  enhance interpretability reliability advancing artificial intelligence  despite proficiency llm range task  potential understanding causality requires exploration  propose novel causal attribution model utilizes  dooperators  constructing counterfactual scenari  paper explores causal reasoning large language model  llm  enhance interpretability reliability advancing artificial intelligence  despite proficiency llm range task  potential understanding causality requires exploration  propose novel causal attribution model utilizes  dooperators  constructing counterfactual scenario  allowing u systematically quantify influence input numerical data llm  preexisting knowledge causal reasoning process  newly developed experimental setup ass llm  reliance contextual information inherent knowledge across various domain  evaluation reveals llm  causal reasoning ability depends context domainspecific knowledge provided  support argument  knowledge  indeed  llm principally require sound causal reasoning   contrary  absence knowledge  llm still maintain degree causal reasoning using available numerical data  albeit limitation calculation   le",
        "Date_processed": "29december2023"
    },
    {
        "ID": 97,
        "Title_processed": "python package measuring composition complex datasets",
        "Authors_processed": "phucnguyen rohitarora elliotd.hill jasperbraun alexandramorgan lizam.quintana gabriellemazzoni gheeryelee rimaarnaout ramyarnaout",
        "Abstract_processed": "abstract  betweenelement similarity  although available r julia programming language application  readily available python  widely used machine learning  easily applied machinelearningsized datasets without special coding consideration  address issue  dev  machinelearning datasets typically characterized measuring size class balance  however  exists richer potentially useful set measure  termed diversity measure  incorporate element  frequency betweenelement similarity  although available r julia programming language application  readily available python  widely used machine learning  easily applied machinelearningsized datasets without special coding consideration  address issue  developed  textit  greylock    python package calculates diversity measure tailored large datasets   textit  greylock   calculate frequencysensitive measure hill dnumber framework  going beyond hill  similaritysensitive counterpart  greylock mountain    textit  greylock   also output measure compare datasets  beta diversity   first briefly review dnumber framework  illustrating incorporates element  frequency betweenelement similarity  describe  textit  greylock   key feature usage  end several example  immunomics  metagenomics  computational pathology  medical imaging  illustrating  textit  greylock   applicability across range dataset type field   le",
        "Date_processed": "29december2023"
    },
    {
        "ID": 98,
        "Title_processed": "data augmentation supervised graph outlier detection latent diffusion model",
        "Authors_processed": "kayliu hengruizhang ziqinghu fangxinwang philips.yu",
        "Abstract_processed": "abstract  demonstrated generation quality synthetic data  foster accessibility reproducibility  encapsulate godm plugandplay package release python package index  pypi    graph outlier detection prominent task research application realm graph neural network  identifies outlier node exhibit deviation majority graph  one fundamental challenge confronting supervised graph outlier detection algorithm prevalent issue class imbalance  scarcity outlier instance compared normal instance often result suboptimal performance  conventional method mitigate imbalance reweighting instance estimation loss function  assigning higher weight outlier lower weight inliers  nonetheless  strategy prone overfitting underfitting  respectively  recently  generative model  especially diffusion model  demonstrated efficacy synthesizing highfidelity image  despite extraordinary generation quality  potential data augmentation supervised graph outlier detection remains largely underexplored  bridge gap  introduce godm  novel data augmentation mitigating class imbalance supervised graph outlier detection latent diffusion model  specifically  proposed method consists three key component   1  variantioanl encoder map heterogeneous information inherent within graph data unified latent space   2  graph generator synthesizes graph data statistically similar real outlier latent space   3  latent diffusion model learns latent space distribution real organic data iterative denoising  extensive experiment conducted multiple datasets substantiate effectiveness efficiency godm  case study demonstrated generation quality synthetic data  foster accessibility reproducibility  encapsulate godm plugandplay package release python package index  pypi    le",
        "Date_processed": "29december2023"
    },
    {
        "ID": 99,
        "Title_processed": "holographic weak measurement",
        "Authors_processed": "xinyusun shao-kaijian",
        "Abstract_processed": "abstract  spacetime black hole spacetime separated brane  although measurement irrelevant later phase  postmeasurement geometry realize python lunch   paper  study holographic description weak measurement conformal field theory  cfts   weak measurement viewed soft projection interpolates identity operator projection operator  induce effective central charge distinct unmeasured cft  model weak measurement interface brane  separating different geometry dual postmeasurement state unmeasured cft  respectively  infinite system  weak measurement related icft via spacetime rotation  find holographic entanglement entropy twist operator located defect consistent calculation icft weak measurement  additionally calculate boundary entropy via holographic entanglement well partition function  finite system  weak measurement lead rich phase diagram  marginal measurement emergent brane separate two ad geometry  irrelevant measurement postmeasurement geometry feature ad spacetime black hole spacetime separated brane  although measurement irrelevant later phase  postmeasurement geometry realize python lunch   le",
        "Date_processed": "28december2023"
    },
    {
        "ID": 100,
        "Title_processed": "clubear subsampling package interactive statistical analysis massive data single machine",
        "Authors_processed": "kexu yingqiuzhu yijingliu hanshengwang",
        "Abstract_processed": "abstract  article introduces clubear  pythonbased opensource package interactive massive data analysis  key feature clubear enables user conduct convenient interactive statistical analysis massive data traditional singlecomputer system  thus  clubear provides costeffective solution mining largescale data  article introduces clubear  pythonbased opensource package interactive massive data analysis  key feature clubear enables user conduct convenient interactive statistical analysis massive data traditional singlecomputer system  thus  clubear provides costeffective solution mining largescale datasets  addition  clubear package integrates many commonly used statistical graphical tool  useful commonly encountered data analysis task   le",
        "Date_processed": "28december2023"
    }
]